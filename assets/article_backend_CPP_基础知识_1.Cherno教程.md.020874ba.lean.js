import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.ab7e7ee0.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"18.C++的类","slug":"_18-c-的类","link":"#_18-c-的类","children":[]},{"level":2,"title":"19. C++类与结构体对比","slug":"_19-c-类与结构体对比","link":"#_19-c-类与结构体对比","children":[]},{"level":2,"title":"21. C++类和结构体外的静态（static）","slug":"_21-c-类和结构体外的静态-static","link":"#_21-c-类和结构体外的静态-static","children":[]},{"level":2,"title":"22. C++类和结构体中的静态（static）","slug":"_22-c-类和结构体中的静态-static","link":"#_22-c-类和结构体中的静态-static","children":[]},{"level":2,"title":"23. C++中的局部静态（Local Static）","slug":"_23-c-中的局部静态-local-static","link":"#_23-c-中的局部静态-local-static","children":[]},{"level":2,"title":"24. C++枚举","slug":"_24-c-枚举","link":"#_24-c-枚举","children":[]},{"level":2,"title":"25. C++构造函数","slug":"_25-c-构造函数","link":"#_25-c-构造函数","children":[]},{"level":2,"title":"26. C++析构函数","slug":"_26-c-析构函数","link":"#_26-c-析构函数","children":[]},{"level":2,"title":"27. C++继承","slug":"_27-c-继承","link":"#_27-c-继承","children":[]},{"level":2,"title":"28. C++虚函数","slug":"_28-c-虚函数","link":"#_28-c-虚函数","children":[]},{"level":2,"title":"29. C++接口（纯虚函数）","slug":"_29-c-接口-纯虚函数","link":"#_29-c-接口-纯虚函数","children":[]},{"level":2,"title":"30. C++可见性","slug":"_30-c-可见性","link":"#_30-c-可见性","children":[]},{"level":2,"title":"31. C++数组","slug":"_31-c-数组","link":"#_31-c-数组","children":[{"level":3,"title":"栈数组和堆数组","slug":"栈数组和堆数组","link":"#栈数组和堆数组","children":[]},{"level":3,"title":"memory indirection（内存间接寻址）","slug":"memory-indirection-内存间接寻址","link":"#memory-indirection-内存间接寻址","children":[]},{"level":3,"title":"C++11中的std:array","slug":"c-11中的std-array","link":"#c-11中的std-array","children":[]}]},{"level":2,"title":"32. C++字符串","slug":"_32-c-字符串","link":"#_32-c-字符串","children":[]},{"level":2,"title":"33. C++字符串字面量","slug":"_33-c-字符串字面量","link":"#_33-c-字符串字面量","children":[]},{"level":2,"title":"34. C++中CONST","slug":"_34-c-中const","link":"#_34-c-中const","children":[]},{"level":2,"title":"35. C++mutable关键字","slug":"_35-c-mutable关键字","link":"#_35-c-mutable关键字","children":[]},{"level":2,"title":"36. C++的成员初始化列表","slug":"_36-c-的成员初始化列表","link":"#_36-c-的成员初始化列表","children":[]},{"level":2,"title":"37. C++三元运算符","slug":"_37-c-三元运算符","link":"#_37-c-三元运算符","children":[]},{"level":2,"title":"38. 创建并初始化C++对象","slug":"_38-创建并初始化c-对象","link":"#_38-创建并初始化c-对象","children":[{"level":3,"title":"栈分配","slug":"栈分配","link":"#栈分配","children":[]},{"level":3,"title":"堆分配","slug":"堆分配","link":"#堆分配","children":[]}]},{"level":2,"title":"39. C++ new关键字","slug":"_39-c-new关键字","link":"#_39-c-new关键字","children":[]},{"level":2,"title":"40. C++隐式转换与explicit关键字","slug":"_40-c-隐式转换与explicit关键字","link":"#_40-c-隐式转换与explicit关键字","children":[]},{"level":2,"title":"41. C++运算符(操作符)及其重载","slug":"_41-c-运算符-操作符-及其重载","link":"#_41-c-运算符-操作符-及其重载","children":[{"level":3,"title":"“+”和“*”操作符重载","slug":"和-操作符重载","link":"#和-操作符重载","children":[]},{"level":3,"title":"左移操作符的重载","slug":"左移操作符的重载","link":"#左移操作符的重载","children":[]},{"level":3,"title":"bool操作符的重载","slug":"bool操作符的重载","link":"#bool操作符的重载","children":[]}]},{"level":2,"title":"42. C++this关键字","slug":"_42-c-this关键字","link":"#_42-c-this关键字","children":[]},{"level":2,"title":"43. C++的对象生存期（栈作用域生存期）","slug":"_43-c-的对象生存期-栈作用域生存期","link":"#_43-c-的对象生存期-栈作用域生存期","children":[{"level":3,"title":"局部作用域创建数组的经典错误","slug":"局部作用域创建数组的经典错误","link":"#局部作用域创建数组的经典错误","children":[]},{"level":3,"title":"基于栈的变量的好处","slug":"基于栈的变量的好处","link":"#基于栈的变量的好处","children":[]}]},{"level":2,"title":"44. C++的智能指针","slug":"_44-c-的智能指针","link":"#_44-c-的智能指针","children":[{"level":3,"title":"作用域指针unique_ptr的使用","slug":"作用域指针unique-ptr的使用","link":"#作用域指针unique-ptr的使用","children":[]},{"level":3,"title":"共享指针shared_ptr 的使用","slug":"共享指针shared-ptr-的使用","link":"#共享指针shared-ptr-的使用","children":[]},{"level":3,"title":"弱指针weak_ptr","slug":"弱指针weak-ptr","link":"#弱指针weak-ptr","children":[]}]},{"level":2,"title":"45. C++的拷贝与拷贝构造函数","slug":"_45-c-的拷贝与拷贝构造函数","link":"#_45-c-的拷贝与拷贝构造函数","children":[]},{"level":2,"title":"46. C++的箭头操作符","slug":"_46-c-的箭头操作符","link":"#_46-c-的箭头操作符","children":[]},{"level":2,"title":"47. C++的动态数组(std::vector)","slug":"_47-c-的动态数组-std-vector","link":"#_47-c-的动态数组-std-vector","children":[]},{"level":2,"title":"48. C++的std::vector使用优化","slug":"_48-c-的std-vector使用优化","link":"#_48-c-的std-vector使用优化","children":[]},{"level":2,"title":"49. C++中使用库（静态链接）","slug":"_49-c-中使用库-静态链接","link":"#_49-c-中使用库-静态链接","children":[]},{"level":2,"title":"50. C++中使用动态库","slug":"_50-c-中使用动态库","link":"#_50-c-中使用动态库","children":[]},{"level":2,"title":"51. C++中创建与使用库(VisualStudio多项目)","slug":"_51-c-中创建与使用库-visualstudio多项目","link":"#_51-c-中创建与使用库-visualstudio多项目","children":[]},{"level":2,"title":"52. C++中如何处理多返回值","slug":"_52-c-中如何处理多返回值","link":"#_52-c-中如何处理多返回值","children":[{"level":3,"title":"方法一：通过函数参数传引用或指针的方式","slug":"方法一-通过函数参数传引用或指针的方式","link":"#方法一-通过函数参数传引用或指针的方式","children":[]},{"level":3,"title":"方法二： 通过函数的返回值是一个array（数组）或vector","slug":"方法二-通过函数的返回值是一个array-数组-或vector","link":"#方法二-通过函数的返回值是一个array-数组-或vector","children":[]},{"level":3,"title":"方法三：使用std::pair返回两个返回值","slug":"方法三-使用std-pair返回两个返回值","link":"#方法三-使用std-pair返回两个返回值","children":[]},{"level":3,"title":"方法四：使用std::tuple返回三个或者三个以上返回值","slug":"方法四-使用std-tuple返回三个或者三个以上返回值","link":"#方法四-使用std-tuple返回三个或者三个以上返回值","children":[]},{"level":3,"title":"方法五：返回一个结构体(推荐)","slug":"方法五-返回一个结构体-推荐","link":"#方法五-返回一个结构体-推荐","children":[]},{"level":3,"title":"方法六：C++的结构化绑定","slug":"方法六-c-的结构化绑定","link":"#方法六-c-的结构化绑定","children":[]}]},{"level":2,"title":"53. C++的模板","slug":"_53-c-的模板","link":"#_53-c-的模板","children":[{"level":3,"title":"函数的模板（对形参）","slug":"函数的模板-对形参","link":"#函数的模板-对形参","children":[]},{"level":3,"title":"类的模板","slug":"类的模板","link":"#类的模板","children":[]},{"level":3,"title":"拓展：模板特例化","slug":"拓展-模板特例化","link":"#拓展-模板特例化","children":[]}]},{"level":2,"title":"54. C++的堆和栈内存的比较","slug":"_54-c-的堆和栈内存的比较","link":"#_54-c-的堆和栈内存的比较","children":[]},{"level":2,"title":"55. C++的宏","slug":"_55-c-的宏","link":"#_55-c-的宏","children":[]},{"level":2,"title":"56. C++的auto关键字","slug":"_56-c-的auto关键字","link":"#_56-c-的auto关键字","children":[]},{"level":2,"title":"57. C++的静态数组（std::array)","slug":"_57-c-的静态数组-std-array","link":"#_57-c-的静态数组-std-array","children":[]},{"level":2,"title":"58. C语言风格的函数指针","slug":"_58-c语言风格的函数指针","link":"#_58-c语言风格的函数指针","children":[]},{"level":2,"title":"59. C++的lambda","slug":"_59-c-的lambda","link":"#_59-c-的lambda","children":[]},{"level":2,"title":"60. 为什么我不使用using namespace std","slug":"_60-为什么我不使用using-namespace-std","link":"#_60-为什么我不使用using-namespace-std","children":[]},{"level":2,"title":"61. C++的命名空间","slug":"_61-c-的命名空间","link":"#_61-c-的命名空间","children":[]},{"level":2,"title":"62. C++的线程","slug":"_62-c-的线程","link":"#_62-c-的线程","children":[]},{"level":2,"title":"63. C++的计时","slug":"_63-c-的计时","link":"#_63-c-的计时","children":[]},{"level":2,"title":"64. C++多维数组","slug":"_64-c-多维数组","link":"#_64-c-多维数组","children":[]},{"level":2,"title":"65. C++内置的排序函数","slug":"_65-c-内置的排序函数","link":"#_65-c-内置的排序函数","children":[]},{"level":2,"title":"66. C++的类型双关(type punning)","slug":"_66-c-的类型双关-type-punning","link":"#_66-c-的类型双关-type-punning","children":[]},{"level":2,"title":"67. C++的联合体( union )","slug":"_67-c-的联合体-union","link":"#_67-c-的联合体-union","children":[]},{"level":2,"title":"68. C++的虚析构函数","slug":"_68-c-的虚析构函数","link":"#_68-c-的虚析构函数","children":[]},{"level":2,"title":"69. C++的类型转换","slug":"_69-c-的类型转换","link":"#_69-c-的类型转换","children":[{"level":3,"title":"static_cast","slug":"static-cast","link":"#static-cast","children":[]},{"level":3,"title":"reinterpret_cast","slug":"reinterpret-cast","link":"#reinterpret-cast","children":[]},{"level":3,"title":"const_cast","slug":"const-cast","link":"#const-cast","children":[]},{"level":3,"title":"dynamic_cast","slug":"dynamic-cast","link":"#dynamic-cast","children":[]}]},{"level":2,"title":"70. 条件与操作断点","slug":"_70-条件与操作断点","link":"#_70-条件与操作断点","children":[]},{"level":2,"title":"71. 现代C++中的安全以及如何教授","slug":"_71-现代c-中的安全以及如何教授","link":"#_71-现代c-中的安全以及如何教授","children":[]},{"level":2,"title":"72. C++预编译头文件","slug":"_72-c-预编译头文件","link":"#_72-c-预编译头文件","children":[]},{"level":2,"title":"73. C++的dynamic_cast","slug":"_73-c-的dynamic-cast","link":"#_73-c-的dynamic-cast","children":[]},{"level":2,"title":"74. C++的基准测试","slug":"_74-c-的基准测试","link":"#_74-c-的基准测试","children":[]},{"level":2,"title":"75. C++的结构化绑定(Structured Binding)","slug":"_75-c-的结构化绑定-structured-binding","link":"#_75-c-的结构化绑定-structured-binding","children":[]},{"level":2,"title":"76. C++如何处理optional数据(std::optional)","slug":"_76-c-如何处理optional数据-std-optional","link":"#_76-c-如何处理optional数据-std-optional","children":[]},{"level":2,"title":"77. C++单一变量存放多种类型的数据(std::variant)","slug":"_77-c-单一变量存放多种类型的数据-std-variant","link":"#_77-c-单一变量存放多种类型的数据-std-variant","children":[]},{"level":2,"title":"78. C++如何存储任意类型的数据(std::any)","slug":"_78-c-如何存储任意类型的数据-std-any","link":"#_78-c-如何存储任意类型的数据-std-any","children":[]},{"level":2,"title":"79. 如何让C++运行得更快(std::async)","slug":"_79-如何让c-运行得更快-std-async","link":"#_79-如何让c-运行得更快-std-async","children":[]},{"level":2,"title":"80. 如何让C++字符串更快 in C++","slug":"_80-如何让c-字符串更快-in-c","link":"#_80-如何让c-字符串更快-in-c","children":[]}],"relativePath":"article/backend/CPP/基础知识/1.Cherno教程.md","filePath":"article/backend/CPP/基础知识/1.Cherno教程.md","lastUpdated":1707839101000}'),p={name:"article/backend/CPP/基础知识/1.Cherno教程.md"},o=l("",804),e=[o];function c(t,r,E,y,i,b){return n(),a("div",null,e)}const d=s(p,[["render",c]]);export{F as __pageData,d as default};
