import{_ as e,o as t,c as i,Q as a}from"./chunks/framework.ab7e7ee0.js";const p=JSON.parse('{"title":"通过几个图来回忆","description":"","frontmatter":{},"headers":[{"level":1,"title":"通过几个图来回忆","slug":"通过几个图来回忆","link":"#通过几个图来回忆","children":[{"level":2,"title":"一、基本原理","slug":"一、基本原理","link":"#一、基本原理","children":[]},{"level":2,"title":"二、分支原理","slug":"二、分支原理","link":"#二、分支原理","children":[]},{"level":2,"title":"三、合并分支","slug":"三、合并分支","link":"#三、合并分支","children":[]},{"level":2,"title":"四、git常见工作流","slug":"四、git常见工作流","link":"#四、git常见工作流","children":[]}]}],"relativePath":"article/backend/gitLearn/基本配置/3.Git原理图.md","filePath":"article/backend/gitLearn/基本配置/3.Git原理图.md","lastUpdated":1707839101000}'),c={name:"article/backend/gitLearn/基本配置/3.Git原理图.md"},o=a('<h1 id="通过几个图来回忆" tabindex="-1">通过几个图来回忆 <a class="header-anchor" href="#通过几个图来回忆" aria-label="Permalink to &quot;通过几个图来回忆&quot;">​</a></h1><h2 id="一、基本原理" tabindex="-1">一、基本原理 <a class="header-anchor" href="#一、基本原理" aria-label="Permalink to &quot;一、基本原理&quot;">​</a></h2><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/15_13_53_35_bg2015120901.png" alt="img"></p><h2 id="二、分支原理" tabindex="-1">二、分支原理 <a class="header-anchor" href="#二、分支原理" aria-label="Permalink to &quot;二、分支原理&quot;">​</a></h2><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/15_13_47_55_image-20221215134503310.png" alt="image-20221215134503310" style="zoom:50%;"><p>类似<code>xxxdfafxx</code>的都是一些二进制文件，<code>blob</code>类型</p><h2 id="三、合并分支" tabindex="-1">三、合并分支 <a class="header-anchor" href="#三、合并分支" aria-label="Permalink to &quot;三、合并分支&quot;">​</a></h2><p>分支一般用于修复<code>bug</code>或者新增特性</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/15_14_10_14_image-20221215141014126.png" alt="image-20221215141014126"></p><blockquote><p><code>commit6</code>的时候发现<code>bug</code>，通过<code>git checkout v1.0</code>切回<code>commit2</code>新建<code>bug</code>修复的<code>fix</code>分支，做好修复后到<code>commit</code>，然后切回<code>main</code>主分支，通过<code>git merge fix</code>合并修复分支，如果有冲突，需要先解决冲突，然后<code>commit</code>提交合并<code>fix</code>，生成新的<code>commit</code>对象，它有两个<code>parrent</code>，分别指向<code>commit 4</code>和<code>commit 6</code>.</p></blockquote><h2 id="四、git常见工作流" tabindex="-1">四、git常见工作流 <a class="header-anchor" href="#四、git常见工作流" aria-label="Permalink to &quot;四、git常见工作流&quot;">​</a></h2><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/15_15_26_11_image-20221215152611245.png" alt="image-20221215152611245"></p>',12),l=[o];function d(r,n,g,m,s,_){return t(),i("div",null,l)}const u=e(c,[["render",d]]);export{p as __pageData,u as default};
