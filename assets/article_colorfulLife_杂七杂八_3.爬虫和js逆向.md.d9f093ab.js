import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.ab7e7ee0.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、浏览器的问题","slug":"一、浏览器的问题","link":"#一、浏览器的问题","children":[{"level":3,"title":"1.Elements","slug":"_1-elements","link":"#_1-elements","children":[]},{"level":3,"title":"2.Console","slug":"_2-console","link":"#_2-console","children":[]},{"level":3,"title":"3.Sources","slug":"_3-sources","link":"#_3-sources","children":[]},{"level":3,"title":"4.Network：","slug":"_4-network","link":"#_4-network","children":[]},{"level":3,"title":"5.Application：cookies","slug":"_5-application-cookies","link":"#_5-application-cookies","children":[]},{"level":3,"title":"6.无痕模式","slug":"_6-无痕模式","link":"#_6-无痕模式","children":[]}]},{"level":2,"title":"二、requests","slug":"二、requests","link":"#二、requests","children":[]},{"level":2,"title":"三、数据解析","slug":"三、数据解析","link":"#三、数据解析","children":[]},{"level":2,"title":"四、存储","slug":"四、存储","link":"#四、存储","children":[{"level":3,"title":"1.存储csv","slug":"_1-存储csv","link":"#_1-存储csv","children":[]},{"level":3,"title":"2.mysql","slug":"_2-mysql","link":"#_2-mysql","children":[]},{"level":3,"title":"3.sqlite3","slug":"_3-sqlite3","link":"#_3-sqlite3","children":[]},{"level":3,"title":"4.普通文件下载","slug":"_4-普通文件下载","link":"#_4-普通文件下载","children":[]}]},{"level":2,"title":"五、如何提高爬虫效率","slug":"五、如何提高爬虫效率","link":"#五、如何提高爬虫效率","children":[]},{"level":2,"title":"六、爬虫框架","slug":"六、爬虫框架","link":"#六、爬虫框架","children":[]},{"level":2,"title":"七、找到加密入口方案","slug":"七、找到加密入口方案","link":"#七、找到加密入口方案","children":[{"level":3,"title":"1. 找浏览器的initiator","slug":"_1-找浏览器的initiator","link":"#_1-找浏览器的initiator","children":[]},{"level":3,"title":"2.在Search中进行搜索，这是最好的方案","slug":"_2-在search中进行搜索-这是最好的方案","link":"#_2-在search中进行搜索-这是最好的方案","children":[]}]},{"level":2,"title":"八、加密","slug":"八、加密","link":"#八、加密","children":[{"level":3,"title":"1.md5","slug":"_1-md5","link":"#_1-md5","children":[]},{"level":3,"title":"2.URLEncode和Base64","slug":"_2-urlencode和base64","link":"#_2-urlencode和base64","children":[{"level":4,"title":"（1）URLEncode","slug":"_1-urlencode","link":"#_1-urlencode","children":[]},{"level":4,"title":"2.base64","slug":"_2-base64","link":"#_2-base64","children":[]}]},{"level":3,"title":"3.AES","slug":"_3-aes","link":"#_3-aes","children":[]},{"level":3,"title":"4.DES","slug":"_4-des","link":"#_4-des","children":[]},{"level":3,"title":"5.非对称加密 RSA","slug":"_5-非对称加密-rsa","link":"#_5-非对称加密-rsa","children":[]}]}],"relativePath":"article/colorfulLife/杂七杂八/3.爬虫和js逆向.md","filePath":"article/colorfulLife/杂七杂八/3.爬虫和js逆向.md","lastUpdated":1707839101000}'),p={name:"article/colorfulLife/杂七杂八/3.爬虫和js逆向.md"},e=l(`<blockquote><p>js逆向是一座大山</p></blockquote><h2 id="一、浏览器的问题" tabindex="-1">一、浏览器的问题 <a class="header-anchor" href="#一、浏览器的问题" aria-label="Permalink to &quot;一、浏览器的问题&quot;">​</a></h2><h3 id="_1-elements" tabindex="-1">1.Elements <a class="header-anchor" href="#_1-elements" aria-label="Permalink to &quot;1.Elements&quot;">​</a></h3><p>里面的东西是页面源代码 =&gt;可以经过js进行整容(script)，浏览器进行二次渲染(如table或其他标签)，=&gt;elements里面的代码</p><h3 id="_2-console" tabindex="-1">2.Console <a class="header-anchor" href="#_2-console" aria-label="Permalink to &quot;2.Console&quot;">​</a></h3><p>控制台，这里可以写js代码</p><h3 id="_3-sources" tabindex="-1">3.Sources <a class="header-anchor" href="#_3-sources" aria-label="Permalink to &quot;3.Sources&quot;">​</a></h3><p>放着页面源代码和网页的所有资源，后期会作为调试js的主要工具</p><h3 id="_4-network" tabindex="-1">4.Network： <a class="header-anchor" href="#_4-network" aria-label="Permalink to &quot;4.Network：&quot;">​</a></h3><ul><li><p>headers：</p><ul><li>User-agent：请求的设备版本，以后所有请求至少给一个这个东西</li><li>Refer：防盗链，在抓包工具中，双击url，如果能跳转获取到你需要的东西，就不需要加Refer，Refer其实就是判断上一个url是什么</li></ul></li><li><p>Payload：请求参数，get，post</p><ul><li><p>get请求</p><ul><li><p>query String parameters</p><ul><li><p>把参数通过url进行传递</p><p>url = “<a href="http://www.baidu.com?name=coder&amp;age=18%E2%80%9D" target="_blank" rel="noreferrer">http://www.baidu.com?name=coder&amp;age=18”</a></p></li><li><p>通过params传递参数</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> “http:</span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">www.baidu.com”</span></span>
<span class="line"><span style="color:#79B8FF;">dict</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&quot;coder&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  age: </span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">requests.get(url, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dict</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">#上述参数最终也会放到url里</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> “http:</span><span style="color:#D73A49;">//</span><span style="color:#24292E;">www.baidu.com”</span></span>
<span class="line"><span style="color:#005CC5;">dict</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&quot;coder&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">requests.get(url, </span><span style="color:#E36209;">params</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dict</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">#上述参数最终也会放到url里</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul></li></ul></li><li><p>post请求</p><p>发送请求默认<code>Content-Type</code>是<code>application/x-www-form-urlencoded</code></p><ul><li><p>Form Data</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#直接给字典就行</span></span>
<span class="line"><span style="color:#E1E4E8;">url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> “http:</span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">www.baidu.com”</span></span>
<span class="line"><span style="color:#E1E4E8;">data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&quot;coder&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  age: </span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">requests.post(url, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data)</span></span>
<span class="line"><span style="color:#6A737D;">#上述参数最终也会放到url里</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#直接给字典就行</span></span>
<span class="line"><span style="color:#24292E;">url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> “http:</span><span style="color:#D73A49;">//</span><span style="color:#24292E;">www.baidu.com”</span></span>
<span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&quot;coder&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">requests.post(url, </span><span style="color:#E36209;">data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data)</span></span>
<span class="line"><span style="color:#6A737D;">#上述参数最终也会放到url里</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>Request Payload</p><p>请求挂载，传输的数据大多情况下是json字符串，在payload里面可以观察到是json格式的数据，或者在请求头里面看到<code>Content-Type:application/json</code></p><ul><li><p>通过data传递数据</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> json</span></span>
<span class="line"><span style="color:#E1E4E8;">url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> “http:</span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">www.baidu.com”</span></span>
<span class="line"><span style="color:#E1E4E8;">data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&quot;coder&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  age: </span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">headers </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  Content</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Type: </span><span style="color:#9ECBFF;">&quot;application/json;charset=utf-8&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">requests.post(url, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> json.dumps(data， </span><span style="color:#FFAB70;">separators</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;:&quot;</span><span style="color:#E1E4E8;">)), </span><span style="color:#FFAB70;">headers</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> headers)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> json</span></span>
<span class="line"><span style="color:#24292E;">url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> “http:</span><span style="color:#D73A49;">//</span><span style="color:#24292E;">www.baidu.com”</span></span>
<span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&quot;coder&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">headers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  Content</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Type: </span><span style="color:#032F62;">&quot;application/json;charset=utf-8&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">requests.post(url, </span><span style="color:#E36209;">data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> json.dumps(data， </span><span style="color:#E36209;">separators</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#24292E;">)), </span><span style="color:#E36209;">headers</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> headers)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li><li><p>通过requests中的json直接处理，不过有坑！</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> “http:</span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">www.baidu.com”</span></span>
<span class="line"><span style="color:#E1E4E8;">data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&quot;coder&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  age: </span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">requests.post(url, </span><span style="color:#FFAB70;">json</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> “http:</span><span style="color:#D73A49;">//</span><span style="color:#24292E;">www.baidu.com”</span></span>
<span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&quot;coder&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">requests.post(url, </span><span style="color:#E36209;">json</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>坑就是：python自动进行字典转换为json的时候，会有空格，很多后台在做反爬时会判断，这种时候没法解决，只能换data方式</p></blockquote></li></ul></li></ul></li></ul></li></ul><p>如果在protocol里面看到h2的时候，表示当前请求用的是http2.0的版本，大多数网页都是兼容http1.1的，有些网页会屏蔽http1.1，python的requests模块不支持http2.0，如果你能使用的所有手段都测试过了发现还是不行，可以考虑用一下http2的请求，python发送http2的请求使用httpx</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">httpx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">httpx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> httpx</span></span>
<span class="line"><span style="color:#E1E4E8;">client </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> httpx.Client(</span><span style="color:#FFAB70;">http2</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">#后面和requests一样</span></span>
<span class="line"><span style="color:#E1E4E8;">client.get()</span></span>
<span class="line"><span style="color:#E1E4E8;">client.post()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> httpx</span></span>
<span class="line"><span style="color:#24292E;">client </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> httpx.Client(</span><span style="color:#E36209;">http2</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">#后面和requests一样</span></span>
<span class="line"><span style="color:#24292E;">client.get()</span></span>
<span class="line"><span style="color:#24292E;">client.post()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_5-application-cookies" tabindex="-1">5.Application：cookies <a class="header-anchor" href="#_5-application-cookies" aria-label="Permalink to &quot;5.Application：cookies&quot;">​</a></h3><p>在requests中详解</p><h3 id="_6-无痕模式" tabindex="-1">6.无痕模式 <a class="header-anchor" href="#_6-无痕模式" aria-label="Permalink to &quot;6.无痕模式&quot;">​</a></h3><p>去除缓存的干扰，建议使用</p><h2 id="二、requests" tabindex="-1">二、requests <a class="header-anchor" href="#二、requests" aria-label="Permalink to &quot;二、requests&quot;">​</a></h2><p>几个关键点</p><p>可以直接使用session来代替requests，建议使用session</p><ul><li>优点1是保存cookie信息</li><li>优点2是保存headers信息</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">session </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> requests.session()</span></span>
<span class="line"><span style="color:#E1E4E8;">url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">resp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> session.get(url)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(resp.cookies)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(session.cookies)</span><span style="color:#6A737D;">#已经拿到了</span></span>
<span class="line"><span style="color:#6A737D;">#修改cookies或headers</span></span>
<span class="line"><span style="color:#E1E4E8;">session.cookies.set(</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">session.headers </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;user-agent&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;xxxx&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">#后面可以直接使用session来发送请求，不用每次都传入headers</span></span>
<span class="line"><span style="color:#E1E4E8;">session.get(url)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">session </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> requests.session()</span></span>
<span class="line"><span style="color:#24292E;">url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">resp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> session.get(url)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(resp.cookies)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(session.cookies)</span><span style="color:#6A737D;">#已经拿到了</span></span>
<span class="line"><span style="color:#6A737D;">#修改cookies或headers</span></span>
<span class="line"><span style="color:#24292E;">session.cookies.set(</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">session.headers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;user-agent&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;xxxx&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">#后面可以直接使用session来发送请求，不用每次都传入headers</span></span>
<span class="line"><span style="color:#24292E;">session.get(url)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="三、数据解析" tabindex="-1">三、数据解析 <a class="header-anchor" href="#三、数据解析" aria-label="Permalink to &quot;三、数据解析&quot;">​</a></h2><ul><li>html</li></ul><p>bs4 xpath</p><ul><li><p>js代码</p><p>使用re，正则来做</p></li></ul><p>jsonp：js代码+数据（jd为例）</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2023/06/9_7_41_31_image-20230606142527089.png" alt="image-20230606142527089"></p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> re.compole(</span><span style="color:#F97583;">r</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#85E89D;font-weight:bold;">\\(</span><span style="color:#79B8FF;">(</span><span style="color:#85E89D;">?P&lt;data&gt;</span><span style="color:#79B8FF;">.</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">)</span><span style="color:#85E89D;font-weight:bold;">\\)</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">r </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.search(res)</span></span>
<span class="line"><span style="color:#6A737D;"># print(r.group(&quot;data&quot;))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> json</span></span>
<span class="line"><span style="color:#E1E4E8;">resp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> json.loads(r.group(</span><span style="color:#9ECBFF;">&#39;data&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(resp)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> re.compole(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;</span><span style="color:#22863A;font-weight:bold;">\\(</span><span style="color:#005CC5;">(</span><span style="color:#22863A;">?P&lt;data&gt;</span><span style="color:#005CC5;">.</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">)</span><span style="color:#22863A;font-weight:bold;">\\)</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.search(res)</span></span>
<span class="line"><span style="color:#6A737D;"># print(r.group(&quot;data&quot;))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> json</span></span>
<span class="line"><span style="color:#24292E;">resp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> json.loads(r.group(</span><span style="color:#032F62;">&#39;data&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(resp)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><p>json数据</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">resp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> session.get()</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(resp.text) </span><span style="color:#6A737D;"># 先看一下获取的东西是不是json</span></span>
<span class="line"><span style="color:#E1E4E8;">dic </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> resp.json()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">resp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> session.get()</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(resp.text) </span><span style="color:#6A737D;"># 先看一下获取的东西是不是json</span></span>
<span class="line"><span style="color:#24292E;">dic </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> resp.json()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>png，jpg图片，m3u8，mp4….</p></li><li><p>css样式文件 直接保存即可</p></li><li><p>字体文件 直接保存即可</p></li><li><p>其他</p><p>一些加密数据，看js是怎么加密的我们就怎么解密</p></li></ul><h2 id="四、存储" tabindex="-1">四、存储 <a class="header-anchor" href="#四、存储" aria-label="Permalink to &quot;四、存储&quot;">​</a></h2><h3 id="_1-存储csv" tabindex="-1">1.存储csv <a class="header-anchor" href="#_1-存储csv" aria-label="Permalink to &quot;1.存储csv&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">lst </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;aaaa&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;b&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bbbb&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;c&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;cccc&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;数据.csv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;w&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> item </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> lst:</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]))</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]))</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 如果数据中有逗号</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;数据.csv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;w&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> item </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> lst:</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 如果有一些奇怪符号如引号，那就更换分隔符</span></span>
<span class="line"><span style="color:#6A737D;"># 要告诉客户分隔符是什么</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;数据.csv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;w&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> item </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> lst:</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]))</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;|&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]))</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;|&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(item[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]))</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.write(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pandas </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">r </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pd.read_csv(</span><span style="color:#9ECBFF;">&quot;数据.csv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">sep</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;|&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">header</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(r)</span></span>
<span class="line"><span style="color:#6A737D;">#转存到excel</span></span>
<span class="line"><span style="color:#E1E4E8;">r.to_excel(</span><span style="color:#9ECBFF;">&quot;data.xlsx&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">lst </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;aaaa&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;b&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bbbb&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;c&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;cccc&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;数据.csv&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;w&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> lst:</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 如果数据中有逗号</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;数据.csv&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;w&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> lst:</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 如果有一些奇怪符号如引号，那就更换分隔符</span></span>
<span class="line"><span style="color:#6A737D;"># 要告诉客户分隔符是什么</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;数据.csv&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;w&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> lst:</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;|&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;|&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(item[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#24292E;">        f.write(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pandas </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.read_csv(</span><span style="color:#032F62;">&quot;数据.csv&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">sep</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;|&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">header</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(r)</span></span>
<span class="line"><span style="color:#6A737D;">#转存到excel</span></span>
<span class="line"><span style="color:#24292E;">r.to_excel(</span><span style="color:#032F62;">&quot;data.xlsx&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="_2-mysql" tabindex="-1">2.mysql <a class="header-anchor" href="#_2-mysql" aria-label="Permalink to &quot;2.mysql&quot;">​</a></h3><p>sqlite好用</p><h3 id="_3-sqlite3" tabindex="-1">3.sqlite3 <a class="header-anchor" href="#_3-sqlite3" aria-label="Permalink to &quot;3.sqlite3&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> sqlite3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">conn </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sqlite3.connect(</span><span style="color:#9ECBFF;">&quot;data.db&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">cur </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> conn.cursor()</span></span>
<span class="line"><span style="color:#F97583;">try</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  sql </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  cur.excute(sql, (p1, p2, </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">  cur.commit()</span></span>
<span class="line"><span style="color:#F97583;">except</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Exception</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> e:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(e)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> sqlite3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">conn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlite3.connect(</span><span style="color:#032F62;">&quot;data.db&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">cur </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> conn.cursor()</span></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  sql </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  cur.excute(sql, (p1, p2, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  cur.commit()</span></span>
<span class="line"><span style="color:#D73A49;">except</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Exception</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> e:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(e)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_4-普通文件下载" tabindex="-1">4.普通文件下载 <a class="header-anchor" href="#_4-普通文件下载" aria-label="Permalink to &quot;4.普通文件下载&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> requests</span></span>
<span class="line"><span style="color:#E1E4E8;">url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">resp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> requests.get(url)</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;wb&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">    f.write(resp.content)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> requests</span></span>
<span class="line"><span style="color:#24292E;">url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">resp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> requests.get(url)</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;wb&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">    f.write(resp.content)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="五、如何提高爬虫效率" tabindex="-1">五、如何提高爬虫效率 <a class="header-anchor" href="#五、如何提高爬虫效率" aria-label="Permalink to &quot;五、如何提高爬虫效率&quot;">​</a></h2><ul><li><p>多线程</p><p>直接上线程池，控制好并发</p><p>相似或者相同的任务适合多线程</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> concurrent.futures </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> ThreadPoolExecutor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">work</span><span style="color:#E1E4E8;">(i):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;爬取&quot;</span><span style="color:#E1E4E8;">, i)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 10是并发量，注意控制</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;__main__&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> ThreadPoolExecutor(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> t:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">            t.submit(work, i)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;done&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> concurrent.futures </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ThreadPoolExecutor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">work</span><span style="color:#24292E;">(i):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;爬取&quot;</span><span style="color:#24292E;">, i)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 10是并发量，注意控制</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;__main__&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">with</span><span style="color:#24292E;"> ThreadPoolExecutor(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> t:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">            t.submit(work, i)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;done&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li><li><p>多进程</p><p>多个任务之间关联不大的时候可用多进程</p></li><li><p>协程</p><p>电影：m3u8一般不设防，一堆URL，下载文件，一般是云服务，</p></li></ul><h2 id="六、爬虫框架" tabindex="-1">六、爬虫框架 <a class="header-anchor" href="#六、爬虫框架" aria-label="Permalink to &quot;六、爬虫框架&quot;">​</a></h2><p>scrapy，一般不用</p><h2 id="七、找到加密入口方案" tabindex="-1">七、找到加密入口方案 <a class="header-anchor" href="#七、找到加密入口方案" aria-label="Permalink to &quot;七、找到加密入口方案&quot;">​</a></h2><p>目标：</p><ul><li>参数加密前什么样</li><li>怎么加密的</li></ul><h3 id="_1-找浏览器的initiator" tabindex="-1">1. 找浏览器的initiator <a class="header-anchor" href="#_1-找浏览器的initiator" aria-label="Permalink to &quot;1. 找浏览器的initiator&quot;">​</a></h3><p>启动器，下下策，它记录着浏览器js执行的过程</p><p>request call stack</p><ul><li><p>断点</p><ul><li>可以查看当前这个位置所有能够使用到的标量</li><li>可以查看当前位置可以执行的函数是什么？以及函数执行之后的结果是什么，甚至可以改变当前位置的函数声明</li><li>可以在断电状态下，选择一个变量或函数，鼠标划上去，看一下有什么东西</li><li>可以在断点状态下，在console中输入一个变量或者函数，来看该函数或变量的内容，通过call stack可以查看上一步调用位置的参数，数据，内存，函数（可能会有风险，但是问题不大），但是不要去单步调试，尽可能在当前断点位置进行调试</li></ul><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2023/06/12_19_54_32_image-20230607072706075.png" alt="image-20230607072706075" style="zoom:50%;"></li><li><p>加密相关</p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2023/06/12_19_54_36_image-20230607113601508.png" alt="image-20230607113601508" style="zoom:50%;"></li></ul><p>类似上面这种，一般是第三方库，Crypto-js</p><p>如何抠代码：</p><ul><li><p>找到入口，把入口拿下来，尝试一个函数一个函数的去填补，过程非常曲折</p></li><li><p>找到代码的边界</p><p>一个大闭包？两个闭包之间？肯定是具有相似性的，需要人为去判别</p></li><li><p>找第三方库</p></li></ul><h3 id="_2-在search中进行搜索-这是最好的方案" tabindex="-1">2.在Search中进行搜索，这是最好的方案 <a class="header-anchor" href="#_2-在search中进行搜索-这是最好的方案" aria-label="Permalink to &quot;2.在Search中进行搜索，这是最好的方案&quot;">​</a></h3><ul><li><p>搜url，在url的？前面一个单词接一个单词的搜索</p></li><li><p>搜参数，请求上的各种参数，主要针对加密参数</p></li><li><p>拦截器，该网站使用的异步，Promise</p></li></ul><p>没有100%的方案，又快又准确，没有哟！</p><h2 id="八、加密" tabindex="-1">八、加密 <a class="header-anchor" href="#八、加密" aria-label="Permalink to &quot;八、加密&quot;">​</a></h2><h3 id="_1-md5" tabindex="-1">1.md5 <a class="header-anchor" href="#_1-md5" aria-label="Permalink to &quot;1.md5&quot;">​</a></h3><p>当在网站上看到一些加密逻辑，发现计算结果是32位字符串长，该字符串的组成是0-9a-f(十六进制) 然后去尝试，把123456丢进去，看看结果，如果是e10开头，直接标准md5,就可以开始写python代码了</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> hashlib </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> md5</span></span>
<span class="line"><span style="color:#6A737D;"># md5可以加盐,默认是放在待加密数据前面</span></span>
<span class="line"><span style="color:#6A737D;"># obj = md5(b&#39;jdklajflauei&#39;)</span></span>
<span class="line"><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> md5(</span><span style="color:#F97583;">b</span><span style="color:#9ECBFF;">&#39;jdkajflajf&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">obj.update(</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">.encode(</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">md5_val </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.hexdigest()</span></span>
<span class="line"><span style="color:#6A737D;"># 0aee8e7baca0a10ea2f97c6f5c6b1f27</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(md5_val)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(md5_val))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_md5</span><span style="color:#E1E4E8;">(s):</span></span>
<span class="line"><span style="color:#E1E4E8;">    obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> md5()</span></span>
<span class="line"><span style="color:#E1E4E8;">    obj.update(s.encode(</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj.hexdigest()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 0aee8e7baca0a10ea2f97c6f5c6b1f27</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(get_md5(</span><span style="color:#9ECBFF;">&quot;jdkajflajfhello&quot;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> hashlib </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> md5</span></span>
<span class="line"><span style="color:#6A737D;"># md5可以加盐,默认是放在待加密数据前面</span></span>
<span class="line"><span style="color:#6A737D;"># obj = md5(b&#39;jdklajflauei&#39;)</span></span>
<span class="line"><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> md5(</span><span style="color:#D73A49;">b</span><span style="color:#032F62;">&#39;jdkajflajf&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">obj.update(</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">.encode(</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">md5_val </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.hexdigest()</span></span>
<span class="line"><span style="color:#6A737D;"># 0aee8e7baca0a10ea2f97c6f5c6b1f27</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(md5_val)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(md5_val))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_md5</span><span style="color:#24292E;">(s):</span></span>
<span class="line"><span style="color:#24292E;">    obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> md5()</span></span>
<span class="line"><span style="color:#24292E;">    obj.update(s.encode(</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj.hexdigest()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 0aee8e7baca0a10ea2f97c6f5c6b1f27</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(get_md5(</span><span style="color:#032F62;">&quot;jdkajflajfhello&quot;</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><code>sha1 sha512等等都一样</code>，可以查网站<a href="https://1024tools.com/hash" target="_blank" rel="noreferrer">https://1024tools.com/hash</a></p><table><thead><tr><th style="text-align:left;"></th><th></th><th style="text-align:left;"></th><th style="text-align:left;"></th><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">#</td><td>算法</td><td style="text-align:left;">结果</td><td style="text-align:left;">结果(大写)</td><td style="text-align:left;">长度</td><td style="text-align:left;">备注</td></tr><tr><td style="text-align:left;">1</td><td>md5</td><td style="text-align:left;">e10adc3949ba59abbe56e057f20f883e</td><td style="text-align:left;">E10ADC3949BA59ABBE56E057F20F883E</td><td style="text-align:left;">32</td><td style="text-align:left;">前16位： 小写：e10adc3949ba59ab 大写：E10ADC3949BA59AB</td></tr><tr><td style="text-align:left;">2</td><td>sha1</td><td style="text-align:left;">7c4a8d09ca3762af61e59520943dc26494f8941b</td><td style="text-align:left;">7C4A8D09CA3762AF61E59520943DC26494F8941B</td><td style="text-align:left;">40</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">3</td><td>sha256</td><td style="text-align:left;">8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</td><td style="text-align:left;">8D969EEF6ECAD3C29A3A629280E686CF0C3F5D5A86AFF3CA12020C923ADC6C92</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">4</td><td>sha512</td><td style="text-align:left;">ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413</td><td style="text-align:left;">BA3253876AED6BC22D4A6FF53D8406C6AD864195ED144AB5C87621B6C233B548BAEAE6956DF346EC8C17F5EA10F35EE3CBC514797ED7DDD3145464E2A0BAB413</td><td style="text-align:left;">128</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">5</td><td>adler32</td><td style="text-align:left;">042e0136</td><td style="text-align:left;">042E0136</td><td style="text-align:left;">8</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">6</td><td>crc32</td><td style="text-align:left;">70930f27</td><td style="text-align:left;">70930F27</td><td style="text-align:left;">8</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">7</td><td>crc32b</td><td style="text-align:left;">0972d361</td><td style="text-align:left;">0972D361</td><td style="text-align:left;">8</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">8</td><td>crc32c</td><td style="text-align:left;">41357186</td><td style="text-align:left;">41357186</td><td style="text-align:left;">8</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">9</td><td>fnv132</td><td style="text-align:left;">eb008bb8</td><td style="text-align:left;">EB008BB8</td><td style="text-align:left;">8</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">10</td><td>fnv164</td><td style="text-align:left;">10f897e26c4b9478</td><td style="text-align:left;">10F897E26C4B9478</td><td style="text-align:left;">16</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">11</td><td>fnv1a32</td><td style="text-align:left;">9995b6aa</td><td style="text-align:left;">9995B6AA</td><td style="text-align:left;">8</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">12</td><td>fnv1a64</td><td style="text-align:left;">f6e3ed7e0e67290a</td><td style="text-align:left;">F6E3ED7E0E67290A</td><td style="text-align:left;">16</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">13</td><td>gost</td><td style="text-align:left;">84cdecc9c273927ff6d9cca1ae75945990a2cb1f81e5daab52a987f6d788c372</td><td style="text-align:left;">84CDECC9C273927FF6D9CCA1AE75945990A2CB1F81E5DAAB52A987F6D788C372</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">14</td><td>gost-crypto</td><td style="text-align:left;">7db20e3a7d652bde0b1a1b7486076a2e11f795e99bf7f5fe700fb83f15b19ef2</td><td style="text-align:left;">7DB20E3A7D652BDE0B1A1B7486076A2E11F795E99BF7F5FE700FB83F15B19EF2</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">15</td><td>haval128,3</td><td style="text-align:left;">1d8071d4a59f25a2a92a9a4844ba1e05</td><td style="text-align:left;">1D8071D4A59F25A2A92A9A4844BA1E05</td><td style="text-align:left;">32</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">16</td><td>haval128,4</td><td style="text-align:left;">2019090003211f11c03adb877bf3ae20</td><td style="text-align:left;">2019090003211F11C03ADB877BF3AE20</td><td style="text-align:left;">32</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">17</td><td>haval128,5</td><td style="text-align:left;">60271b45e6d4b8eea7d9f474e69c848b</td><td style="text-align:left;">60271B45E6D4B8EEA7D9F474E69C848B</td><td style="text-align:left;">32</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">18</td><td>haval160,3</td><td style="text-align:left;">83e612afb8ed267198b696759a49561375f70c81</td><td style="text-align:left;">83E612AFB8ED267198B696759A49561375F70C81</td><td style="text-align:left;">40</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">19</td><td>haval160,4</td><td style="text-align:left;">3da690924ffb8d3f5bff8b608279f3c419bdb9c9</td><td style="text-align:left;">3DA690924FFB8D3F5BFF8B608279F3C419BDB9C9</td><td style="text-align:left;">40</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">20</td><td>haval160,5</td><td style="text-align:left;">ee85271e7bb4b7f2ec4c5418b47804eb1be9e91f</td><td style="text-align:left;">EE85271E7BB4B7F2EC4C5418B47804EB1BE9E91F</td><td style="text-align:left;">40</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">21</td><td>haval192,3</td><td style="text-align:left;">d2cfda5179fd9b6037ba35f261c576b2300717151a8db6a5</td><td style="text-align:left;">D2CFDA5179FD9B6037BA35F261C576B2300717151A8DB6A5</td><td style="text-align:left;">48</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">22</td><td>haval192,4</td><td style="text-align:left;">7e1e573209c8d7f39919bea0d1466df325f3dbdd1fd3057a</td><td style="text-align:left;">7E1E573209C8D7F39919BEA0D1466DF325F3DBDD1FD3057A</td><td style="text-align:left;">48</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">23</td><td>haval192,5</td><td style="text-align:left;">9e8acd170a8fe1b929c0c652397b6b494abf1cd095371ad7</td><td style="text-align:left;">9E8ACD170A8FE1B929C0C652397B6B494ABF1CD095371AD7</td><td style="text-align:left;">48</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">24</td><td>haval224,3</td><td style="text-align:left;">d59e77b4c4d7aa6e02708683381c5631ee79b9e50ab9eaeb4dc38b9a</td><td style="text-align:left;">D59E77B4C4D7AA6E02708683381C5631EE79B9E50AB9EAEB4DC38B9A</td><td style="text-align:left;">56</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">25</td><td>haval224,4</td><td style="text-align:left;">64d007c6e75ee71244bf33a876c8f380c17e64b18d3d9be67000b277</td><td style="text-align:left;">64D007C6E75EE71244BF33A876C8F380C17E64B18D3D9BE67000B277</td><td style="text-align:left;">56</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">26</td><td>haval224,5</td><td style="text-align:left;">dbcdd0348d0b23a89fe3e190abd8b279a5d8d4fa4e62d1e02ad0a6ff</td><td style="text-align:left;">DBCDD0348D0B23A89FE3E190ABD8B279A5D8D4FA4E62D1E02AD0A6FF</td><td style="text-align:left;">56</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">27</td><td>haval256,3</td><td style="text-align:left;">0e3b78d8380844b0f697bb912da7f4d210382c6714194fd16039ef2acd924dcf</td><td style="text-align:left;">0E3B78D8380844B0F697BB912DA7F4D210382C6714194FD16039EF2ACD924DCF</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">28</td><td>haval256,4</td><td style="text-align:left;">84095060071ad0f4f41fa629653511074720aaa94c4f0d873e317d58002f8020</td><td style="text-align:left;">84095060071AD0F4F41FA629653511074720AAA94C4F0D873E317D58002F8020</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">29</td><td>haval256,5</td><td style="text-align:left;">2f014311e0926fa8b3d6e6de2051bf69332123baadfe522b62f4645655859e7a</td><td style="text-align:left;">2F014311E0926FA8B3D6E6DE2051BF69332123BAADFE522B62F4645655859E7A</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">30</td><td>joaat</td><td style="text-align:left;">eef833c1</td><td style="text-align:left;">EEF833C1</td><td style="text-align:left;">8</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">31</td><td>md2</td><td style="text-align:left;">d4541250b586296fcce5dea4463ae17f</td><td style="text-align:left;">D4541250B586296FCCE5DEA4463AE17F</td><td style="text-align:left;">32</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">32</td><td>md4</td><td style="text-align:left;">585028aa0f794af812ee3be8804eb14a</td><td style="text-align:left;">585028AA0F794AF812EE3BE8804EB14A</td><td style="text-align:left;">32</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">33</td><td>ripemd128</td><td style="text-align:left;">d6d56cab46e0f3af2c756289f2b447e0</td><td style="text-align:left;">D6D56CAB46E0F3AF2C756289F2B447E0</td><td style="text-align:left;">32</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">34</td><td>ripemd160</td><td style="text-align:left;">d8913df37b24c97f28f840114d05bd110dbb2e44</td><td style="text-align:left;">D8913DF37B24C97F28F840114D05BD110DBB2E44</td><td style="text-align:left;">40</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">35</td><td>ripemd256</td><td style="text-align:left;">77093b1266befed58d512e67b3a8a15398c3ce5c1333d66a190becc9baa329e9</td><td style="text-align:left;">77093B1266BEFED58D512E67B3A8A15398C3CE5C1333D66A190BECC9BAA329E9</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">36</td><td>ripemd320</td><td style="text-align:left;">a2ee4b6b9e3144c7db61b1ffc748bf2c728b65819e3f69a021f515acb044995b90f03d60974b6b4a</td><td style="text-align:left;">A2EE4B6B9E3144C7DB61B1FFC748BF2C728B65819E3F69A021F515ACB044995B90F03D60974B6B4A</td><td style="text-align:left;">80</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">37</td><td>sha224</td><td style="text-align:left;">f8cdb04495ded47615258f9dc6a3f4707fd2405434fefc3cbf4ef4e6</td><td style="text-align:left;">F8CDB04495DED47615258F9DC6A3F4707FD2405434FEFC3CBF4EF4E6</td><td style="text-align:left;">56</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">38</td><td>sha3-224</td><td style="text-align:left;">6be790258b73da9441099c4cb6aeec1f0c883152dd74e7581b70a648</td><td style="text-align:left;">6BE790258B73DA9441099C4CB6AEEC1F0C883152DD74E7581B70A648</td><td style="text-align:left;">56</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">39</td><td>sha3-256</td><td style="text-align:left;">d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e</td><td style="text-align:left;">D7190EB194FF9494625514B6D178C87F99C5973E28C398969D2233F2960A573E</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">40</td><td>sha3-384</td><td style="text-align:left;">1fb0da774034ba308fbe02f3e90dc004191df7aec3758b6be8451d09f1ff7ec18765f96e71faff637925c6be1d65f1cd</td><td style="text-align:left;">1FB0DA774034BA308FBE02F3E90DC004191DF7AEC3758B6BE8451D09F1FF7EC18765F96E71FAFF637925C6BE1D65F1CD</td><td style="text-align:left;">96</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">41</td><td>sha3-512</td><td style="text-align:left;">64d09d9930c8ecf79e513167a588cb75439b762ce8f9b22ea59765f32aa74ca19d2f1e97dc922a3d4954594a05062917fb24d1f8e72f2ed02a58ed7534f94d27</td><td style="text-align:left;">64D09D9930C8ECF79E513167A588CB75439B762CE8F9B22EA59765F32AA74CA19D2F1E97DC922A3D4954594A05062917FB24D1F8E72F2ED02A58ED7534F94D27</td><td style="text-align:left;">128</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">42</td><td>sha384</td><td style="text-align:left;">0a989ebc4a77b56a6e2bb7b19d995d185ce44090c13e2984b7ecc6d446d4b61ea9991b76a4c2f04b1b4d244841449454</td><td style="text-align:left;">0A989EBC4A77B56A6E2BB7B19D995D185CE44090C13E2984B7ECC6D446D4B61EA9991B76A4C2F04B1B4D244841449454</td><td style="text-align:left;">96</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">43</td><td>sha512/224</td><td style="text-align:left;">007ca663c61310fbee4c1680a5bbe70071825079b23f092713383296</td><td style="text-align:left;">007CA663C61310FBEE4C1680A5BBE70071825079B23F092713383296</td><td style="text-align:left;">56</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">44</td><td>sha512/256</td><td style="text-align:left;">184b5379d5b5a7ab42d3de1d0ca1fedc1f0ffb14a7673ebd026a6369745deb72</td><td style="text-align:left;">184B5379D5B5A7AB42D3DE1D0CA1FEDC1F0FFB14A7673EBD026A6369745DEB72</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">45</td><td>snefru</td><td style="text-align:left;">3321dcaf8911d3842e14a7a415be2fb1a337f4306a4fb8290fd7fe33be269df7</td><td style="text-align:left;">3321DCAF8911D3842E14A7A415BE2FB1A337F4306A4FB8290FD7FE33BE269DF7</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">46</td><td>snefru256</td><td style="text-align:left;">3321dcaf8911d3842e14a7a415be2fb1a337f4306a4fb8290fd7fe33be269df7</td><td style="text-align:left;">3321DCAF8911D3842E14A7A415BE2FB1A337F4306A4FB8290FD7FE33BE269DF7</td><td style="text-align:left;">64</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">47</td><td>tiger128,3</td><td style="text-align:left;">5b2715f7cb7488ce2deb8544f0aa91b6</td><td style="text-align:left;">5B2715F7CB7488CE2DEB8544F0AA91B6</td><td style="text-align:left;">32</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">48</td><td>tiger128,4</td><td style="text-align:left;">effe440b596c7d1766d435a2fd16641e</td><td style="text-align:left;">EFFE440B596C7D1766D435A2FD16641E</td><td style="text-align:left;">32</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">49</td><td>tiger160,3</td><td style="text-align:left;">5b2715f7cb7488ce2deb8544f0aa91b6f0eec76f</td><td style="text-align:left;">5B2715F7CB7488CE2DEB8544F0AA91B6F0EEC76F</td><td style="text-align:left;">40</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">50</td><td>tiger160,4</td><td style="text-align:left;">effe440b596c7d1766d435a2fd16641e27d32af5</td><td style="text-align:left;">EFFE440B596C7D1766D435A2FD16641E27D32AF5</td><td style="text-align:left;">40</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">51</td><td>tiger192,3</td><td style="text-align:left;">5b2715f7cb7488ce2deb8544f0aa91b6f0eec76fb3b74265</td><td style="text-align:left;">5B2715F7CB7488CE2DEB8544F0AA91B6F0EEC76FB3B74265</td><td style="text-align:left;">48</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">52</td><td>tiger192,4</td><td style="text-align:left;">effe440b596c7d1766d435a2fd16641e27d32af54ec875c2</td><td style="text-align:left;">EFFE440B596C7D1766D435A2FD16641E27D32AF54EC875C2</td><td style="text-align:left;">48</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">53</td><td>whirlpool</td><td style="text-align:left;">fd9d94340dbd72c11b37ebb0d2a19b4d05e00fd78e4e2ce8923b9ea3a54e900df181cfb112a8a73228d1f3551680e2ad9701a4fcfb248fa7fa77b95180628bb2</td><td style="text-align:left;">FD9D94340DBD72C11B37EBB0D2A19B4D05E00FD78E4E2CE8923B9EA3A54E900DF181CFB112A8A73228D1F3551680E2AD9701A4FCFB248FA7FA77B95180628BB2</td><td style="text-align:left;">128</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="_2-urlencode和base64" tabindex="-1">2.URLEncode和Base64 <a class="header-anchor" href="#_2-urlencode和base64" aria-label="Permalink to &quot;2.URLEncode和Base64&quot;">​</a></h3><h4 id="_1-urlencode" tabindex="-1">（1）URLEncode <a class="header-anchor" href="#_1-urlencode" aria-label="Permalink to &quot;（1）URLEncode&quot;">​</a></h4><p>quote和quote_plus可以帮我们完成字符串的处理</p><p>在逆向的过程中，有可能需要我们在处理cookie的时候，可能会用到</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> urllib.parse </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> quote, quote_plus</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#  %26%3Dlove/</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(quote(</span><span style="color:#9ECBFF;">&quot;&amp;=love/&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#6A737D;">#  %26%3Dlove%2F</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(quote_plus(</span><span style="color:#9ECBFF;">&quot;&amp;=love/&quot;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> urllib.parse </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> quote, quote_plus</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#  %26%3Dlove/</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(quote(</span><span style="color:#032F62;">&quot;&amp;=love/&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#6A737D;">#  %26%3Dlove%2F</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(quote_plus(</span><span style="color:#032F62;">&quot;&amp;=love/&quot;</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>反向使用<code>unquote,unquote_plus</code></p><h4 id="_2-base64" tabindex="-1">2.base64 <a class="header-anchor" href="#_2-base64" aria-label="Permalink to &quot;2.base64&quot;">​</a></h4><blockquote><p>base64的encode作用是将字节ascII范围内的字节，3个字节变成4个字节，</p></blockquote><p>26个大写字母+26个小写字母+10个数字+2个特殊字符（+和/），它是一种摘要算法，跟加密解密没有关系</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> base64</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># encode过程</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;我爱上天&quot;</span><span style="color:#E1E4E8;">.encode(</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;"># b&#39;\\xe6\\x88\\x91\\xe7\\x88\\xb1\\xe4\\xb8\\x8a\\xe5\\xa4\\xa9&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 先使用base64编码，编码后bs4同样是字节，不过都是ascII范围内的</span></span>
<span class="line"><span style="color:#E1E4E8;">bs4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> base64.b64encode(s) </span><span style="color:#6A737D;"># b&#39;5oiR54ix5LiK5aSp&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 将字节处理成base64字符串</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(bs4.decode()) </span><span style="color:#6A737D;"># 5oiR54ix5LiK5aSp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># decode过程</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;5oiR54ix5LiK5aSp&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">bs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> base64.b64decode(s) </span><span style="color:#6A737D;"># b&#39;\\xe6\\x88\\x91\\xe7\\x88\\xb1\\xe4\\xb8\\x8a\\xe5\\xa4\\xa9&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> base64</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># encode过程</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;我爱上天&quot;</span><span style="color:#24292E;">.encode(</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># b&#39;\\xe6\\x88\\x91\\xe7\\x88\\xb1\\xe4\\xb8\\x8a\\xe5\\xa4\\xa9&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 先使用base64编码，编码后bs4同样是字节，不过都是ascII范围内的</span></span>
<span class="line"><span style="color:#24292E;">bs4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> base64.b64encode(s) </span><span style="color:#6A737D;"># b&#39;5oiR54ix5LiK5aSp&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 将字节处理成base64字符串</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(bs4.decode()) </span><span style="color:#6A737D;"># 5oiR54ix5LiK5aSp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># decode过程</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;5oiR54ix5LiK5aSp&quot;</span></span>
<span class="line"><span style="color:#24292E;">bs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> base64.b64decode(s) </span><span style="color:#6A737D;"># b&#39;\\xe6\\x88\\x91\\xe7\\x88\\xb1\\xe4\\xb8\\x8a\\xe5\\xa4\\xa9&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><p>base64的末尾可能是=，是用来填充的</p></li><li><p>base64既然可以把字节处理成字符串，有的网站就会把一些小的图片（头像，图标）处理成base64，学会吧base64的图片转存为真实的图片</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;data:image/png;base64, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxjfklafjdla&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s.split(</span><span style="color:#9ECBFF;">&#39;,&#39;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">bs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> base64.b64decode(s)</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;xxx.png&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;wb&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">  f.write(bs)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;data:image/png;base64, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxjfklafjdla&quot;</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s.split(</span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">bs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> base64.b64decode(s)</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;xxx.png&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;wb&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">  f.write(bs)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>有些时候，有的网站会把base64进行特殊的处理，比如把<code>+</code>替换成<code>-</code>，把<code>/</code>替换成<code>_</code></p><ul><li><p>应对方案一：<code>replace(“-”, &quot;+&quot;).replace(&quot;_&quot;, &quot;/&quot;)</code></p></li><li><p>应对方案二：使用base64自动处理</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Z21kD9ZK1ke6ugku2ccWu-MeDWh3z252xRTQv-wZ6jddVo3tJLe7gIXz4PyxGl73nSfLAADyElSjjvrYdCvEP4pfohVVEX1DxoI0yhm36ytQNvu-WLU94qULZQ72aml65Eb-&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">bsy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> base64.b64decode(sy,</span><span style="color:#FFAB70;">altchars</span><span style="color:#F97583;">=</span><span style="color:#F97583;">b</span><span style="color:#9ECBFF;">&quot;_-&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Z21kD9ZK1ke6ugku2ccWu-MeDWh3z252xRTQv-wZ6jddVo3tJLe7gIXz4PyxGl73nSfLAADyElSjjvrYdCvEP4pfohVVEX1DxoI0yhm36ytQNvu-WLU94qULZQ72aml65Eb-&quot;</span></span>
<span class="line"><span style="color:#24292E;">bsy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> base64.b64decode(sy,</span><span style="color:#E36209;">altchars</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">b</span><span style="color:#032F62;">&quot;_-&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果通过上述转换后，进行解密操作发现数据不对，或者根本无法解密，调换一下顺序即可。</p></li></ul></li><li><p>字符串可以转换为十六进制的数字，转化逻辑：字节=&gt;8个二进制=&gt;数字=&gt;十六进制，可以使用一个库来操作，那就是<code>binascii</code></p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> binascii</span></span>
<span class="line"><span style="color:#6A737D;"># 字符串转换成十六进制</span></span>
<span class="line"><span style="color:#E1E4E8;">bs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;abcd我喜欢你&quot;</span><span style="color:#E1E4E8;">.encode(</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">#字符串变字节</span></span>
<span class="line"><span style="color:#E1E4E8;">res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> binascii.b2a_hex(bs)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(res) </span><span style="color:#6A737D;"># b&#39;61626364e68891e5969ce6aca2e4bda0&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 十六进制转换为字节</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;61626364e68891e5969ce6aca2e4bda0&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(binascii.a2b_hex(s))</span></span>
<span class="line"><span style="color:#6A737D;"># b&#39;abcd\\xe6\\x88\\x91\\xe5\\x96\\x9c\\xe6\\xac\\xa2\\xe4\\xbd\\xa0&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> binascii</span></span>
<span class="line"><span style="color:#6A737D;"># 字符串转换成十六进制</span></span>
<span class="line"><span style="color:#24292E;">bs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;abcd我喜欢你&quot;</span><span style="color:#24292E;">.encode(</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#字符串变字节</span></span>
<span class="line"><span style="color:#24292E;">res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> binascii.b2a_hex(bs)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(res) </span><span style="color:#6A737D;"># b&#39;61626364e68891e5969ce6aca2e4bda0&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 十六进制转换为字节</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;61626364e68891e5969ce6aca2e4bda0&quot;</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(binascii.a2b_hex(s))</span></span>
<span class="line"><span style="color:#6A737D;"># b&#39;abcd\\xe6\\x88\\x91\\xe5\\x96\\x9c\\xe6\\xac\\xa2\\xe4\\xbd\\xa0&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h3 id="_3-aes" tabindex="-1">3.AES <a class="header-anchor" href="#_3-aes" aria-label="Permalink to &quot;3.AES&quot;">​</a></h3><p>标准库：</p><ul><li>对称加密：加密和解密时使用的是同一个密钥</li><li>非对称加密：加密和解密时使用的密钥不是同一个</li></ul><p>python的一个第三方库提供了加密逻辑，<code>PyCrypto</code>,一般装不上，使用<code>pycrytodome</code>进行平替</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pycryptodome</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pycryptodome</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装成功后，有可能加密包无法使用（不一定能用）</p><pre><code> \`\`\`python
 from Crypto.Cipher import AES
 from Crypto.Util.Padding import pad
 
 # 创建一个aes加密器
 aes = AES.new(key=b&#39;1234567890123456&#39;,IV=b&#39;1234567890123456&#39;,mode=AES.MODE_CBC)
 
 ming = &quot;这是一个测试用例&quot;
 ming = ming.encode(&quot;utf-8&quot;)
 # 注意这里加密必须要填充成16字节的倍数，可以使用自带的pad来进行填充
 # Data must be padded to 16 byte boundary in CBC mode
 ming = pad(ming, 16)
 mi = aes.encrypt(ming)
 print(mi)
 
 # 解密
 aes = AES.new(key=b&#39;1234567890123456&#39;,IV=b&#39;1234567890123456&#39;,mode=AES.MODE_CBC)
 mi = base64.b64decode(mi)
 ming = aes.decrypt(mi)
 ming = unpad(ming, 16)
 print(ming.decode(&quot;utf-8&quot;))
 \`\`\`
</code></pre><blockquote><p>key通常是16位的字节</p></blockquote><p>new创建一个密码器，AES的key有16位、24位、32位字节几种情况，我们在使用时不对了可以切换再试，一般网站上给出的key可能是16进制字符串(32)位，这种情况99%的可能是使用16字节的key，转换关系为每2个字符串对应于一个字节，使用<code>binascii.a2b_hex(xxxx)</code></p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2023/06/9_16_38_33_image-20230609142158902.png" alt="image-20230609142158902"></p><blockquote><p>mode</p><p>ECB：不需要给IV</p><p>CBC：需要给一个16位的IV</p></blockquote><blockquote><p>总结：</p><p>加密：明文字符串-处理成字节-填充pad至16字节倍数-加密-密文（字节）-base64处理成16进制字符串-加密字符串</p><p>解密：倒过来，先用base64将字符串转为字节，再通过aes解密为字节，unpad成可识别的utf-8编码字节后decode</p></blockquote><h3 id="_4-des" tabindex="-1">4.DES <a class="header-anchor" href="#_4-des" aria-label="Permalink to &quot;4.DES&quot;">​</a></h3><p>和AES基本一样，区别的是加密的字节需要是8字节的倍数，区别就在pad和unpad的参数，DES是8</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> base64</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> Crypto.Cipher </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DES</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> Crypto.Util.Padding </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pad, unpad</span></span>
<span class="line"><span style="color:#6A737D;"># 加密</span></span>
<span class="line"><span style="color:#6A737D;"># create a DES encryptor</span></span>
<span class="line"><span style="color:#E1E4E8;">des </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DES</span><span style="color:#E1E4E8;">.new(</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">=</span><span style="color:#F97583;">b</span><span style="color:#9ECBFF;">&#39;12345678&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">IV</span><span style="color:#F97583;">=</span><span style="color:#F97583;">b</span><span style="color:#9ECBFF;">&#39;12345678&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">DES</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">MODE_CBC</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">ming </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;我爱你，宝贝&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">ming </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ming.encode()</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(ming)</span></span>
<span class="line"><span style="color:#E1E4E8;">ming </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pad(ming, </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">mi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> des.encrypt(ming)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(mi)</span></span>
<span class="line"><span style="color:#E1E4E8;">mi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> base64.b64encode(mi).decode()</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(mi)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 解密</span></span>
<span class="line"><span style="color:#E1E4E8;">des </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DES</span><span style="color:#E1E4E8;">.new(</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">=</span><span style="color:#F97583;">b</span><span style="color:#9ECBFF;">&#39;12345678&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">IV</span><span style="color:#F97583;">=</span><span style="color:#F97583;">b</span><span style="color:#9ECBFF;">&#39;12345678&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">DES</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">MODE_CBC</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">dmi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;mv8qg9CMzRDzwxmtMQh5zjmjgPo8PTxV&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">dmi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> base64.b64decode(dmi)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;===&#39;</span><span style="color:#E1E4E8;">, dmi)</span></span>
<span class="line"><span style="color:#E1E4E8;">dmi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> des.decrypt(dmi)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(dmi, </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(dmi))</span></span>
<span class="line"><span style="color:#E1E4E8;">dmi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> unpad(dmi, </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(dmi, </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(dmi))</span></span>
<span class="line"><span style="color:#E1E4E8;">dmi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dmi.decode()</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(dmi)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> base64</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> Crypto.Cipher </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DES</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> Crypto.Util.Padding </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pad, unpad</span></span>
<span class="line"><span style="color:#6A737D;"># 加密</span></span>
<span class="line"><span style="color:#6A737D;"># create a DES encryptor</span></span>
<span class="line"><span style="color:#24292E;">des </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DES</span><span style="color:#24292E;">.new(</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">b</span><span style="color:#032F62;">&#39;12345678&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">IV</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">b</span><span style="color:#032F62;">&#39;12345678&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">DES</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">MODE_CBC</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">ming </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;我爱你，宝贝&quot;</span></span>
<span class="line"><span style="color:#24292E;">ming </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ming.encode()</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(ming)</span></span>
<span class="line"><span style="color:#24292E;">ming </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pad(ming, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">mi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> des.encrypt(ming)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mi)</span></span>
<span class="line"><span style="color:#24292E;">mi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> base64.b64encode(mi).decode()</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mi)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 解密</span></span>
<span class="line"><span style="color:#24292E;">des </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DES</span><span style="color:#24292E;">.new(</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">b</span><span style="color:#032F62;">&#39;12345678&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">IV</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">b</span><span style="color:#032F62;">&#39;12345678&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">DES</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">MODE_CBC</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">dmi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;mv8qg9CMzRDzwxmtMQh5zjmjgPo8PTxV&quot;</span></span>
<span class="line"><span style="color:#24292E;">dmi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> base64.b64decode(dmi)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;===&#39;</span><span style="color:#24292E;">, dmi)</span></span>
<span class="line"><span style="color:#24292E;">dmi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> des.decrypt(dmi)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(dmi, </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(dmi))</span></span>
<span class="line"><span style="color:#24292E;">dmi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> unpad(dmi, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(dmi, </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(dmi))</span></span>
<span class="line"><span style="color:#24292E;">dmi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dmi.decode()</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(dmi)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>实际案例：</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2023/06/12_19_52_57_image-20230612195257249.png" alt="image-20230612195257249"></p><p><a href="https://ctbpsp.com/#/" target="_blank" rel="noreferrer">全国招标公告公示搜索引擎-中国招标投标公共服务平台 (ctbpsp.com)</a></p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> base64</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">session </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> requests.session()</span></span>
<span class="line"><span style="color:#E1E4E8;">session.headers </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;User-Agent&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.43&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://custominfo.cebpubservice.com/cutominfoapi/recommand/type/5/pagesize/10/currentpage/1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">resp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> session.get(</span><span style="color:#FFAB70;">url</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">url)</span></span>
<span class="line"><span style="color:#6A737D;"># print(resp.text)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">mi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> resp.text.strip(</span><span style="color:#9ECBFF;">&#39;&quot;&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 解密</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> Crypto.Cipher </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DES</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> Crypto.Util.Padding </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pad, unpad</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">key_str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;1qaz@wsx3e&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">des </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DES</span><span style="color:#E1E4E8;">.new(</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">key_str[:</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">].encode(</span><span style="color:#9ECBFF;">&quot;utf-8&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">DES</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">MODE_ECB</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">mi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> base64.b64decode(mi)</span></span>
<span class="line"><span style="color:#E1E4E8;">ming </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> des.decrypt(mi)</span></span>
<span class="line"><span style="color:#E1E4E8;">ming </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> unpad(ming, </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ming.decode()</span></span>
<span class="line"><span style="color:#E1E4E8;">dic </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> json.loads(s)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(dic)</span></span>
<span class="line"><span style="color:#6A737D;"># print(s)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> base64</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">session </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> requests.session()</span></span>
<span class="line"><span style="color:#24292E;">session.headers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;User-Agent&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.43&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://custominfo.cebpubservice.com/cutominfoapi/recommand/type/5/pagesize/10/currentpage/1&quot;</span></span>
<span class="line"><span style="color:#24292E;">resp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> session.get(</span><span style="color:#E36209;">url</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">url)</span></span>
<span class="line"><span style="color:#6A737D;"># print(resp.text)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">mi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> resp.text.strip(</span><span style="color:#032F62;">&#39;&quot;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 解密</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> Crypto.Cipher </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DES</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> Crypto.Util.Padding </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pad, unpad</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">key_str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;1qaz@wsx3e&quot;</span></span>
<span class="line"><span style="color:#24292E;">des </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DES</span><span style="color:#24292E;">.new(</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">key_str[:</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">].encode(</span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">), </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">DES</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">MODE_ECB</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">mi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> base64.b64decode(mi)</span></span>
<span class="line"><span style="color:#24292E;">ming </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> des.decrypt(mi)</span></span>
<span class="line"><span style="color:#24292E;">ming </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> unpad(ming, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ming.decode()</span></span>
<span class="line"><span style="color:#24292E;">dic </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> json.loads(s)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(dic)</span></span>
<span class="line"><span style="color:#6A737D;"># print(s)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2023/06/12_19_54_7_image-20230612195407375.png" alt="image-20230612195407375"></p><h3 id="_5-非对称加密-rsa" tabindex="-1">5.非对称加密 RSA <a class="header-anchor" href="#_5-非对称加密-rsa" aria-label="Permalink to &quot;5.非对称加密 RSA&quot;">​</a></h3><p>非对称加密，加密和解密的密钥不一样，加密的是公钥，解密的是私钥，公钥和私钥是一对，在生成密钥的时候会同时生成，必须配合使用才行。rsa最为常用，可以说是一加独大，python中主要有两个库支持rsa，只需掌握一个。在前端js，rsa加密逻辑有两个：</p><ul><li>No Padding：这种方案不推荐直接用python搞，推荐用js库弄</li><li>PKCS padding：python中只能搞这种</li></ul><p><code>rsa</code>两个特征：</p><ul><li><p><code>65537</code></p></li><li><p><code> 010001</code> （16进制，转为10进制就是65537）70%是noPading，建议使用js来做</p></li><li><p>JSEncrypt js的一个第三方加密库，专门用来做rsa加密， PKCs，padding</p></li><li><p><code>publicKey</code> 一定是rsa加密，如果穿进去的是一个base64字样的东西，99%是PCKS padding</p></li></ul><p>生成公钥he私钥的方式：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> Crypto.PublicKey </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RSA</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 这个RSA帮我们生成公钥和私钥</span></span>
<span class="line"><span style="color:#6A737D;"># 如何生成公钥和私钥,一定要一起生成，先生成私钥再生成公钥,默认导出的key都是pem格式</span></span>
<span class="line"><span style="color:#6A737D;"># 生成的key是私钥</span></span>
<span class="line"><span style="color:#E1E4E8;">key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RSA</span><span style="color:#E1E4E8;">.generate(</span><span style="color:#FFAB70;">bits</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">e</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">65537</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;private.pem&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;wb&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">    f.write(key.exportKey())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 公钥是用私钥来生成</span></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;public.pem&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;wb&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">    f.write(key.public_key().exportKey())</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> Crypto.PublicKey </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RSA</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 这个RSA帮我们生成公钥和私钥</span></span>
<span class="line"><span style="color:#6A737D;"># 如何生成公钥和私钥,一定要一起生成，先生成私钥再生成公钥,默认导出的key都是pem格式</span></span>
<span class="line"><span style="color:#6A737D;"># 生成的key是私钥</span></span>
<span class="line"><span style="color:#24292E;">key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RSA</span><span style="color:#24292E;">.generate(</span><span style="color:#E36209;">bits</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">, </span><span style="color:#E36209;">e</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">65537</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;private.pem&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;wb&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">    f.write(key.exportKey())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 公钥是用私钥来生成</span></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;public.pem&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;wb&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">    f.write(key.public_key().exportKey())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2023/06/22_17_17_32_image-20230614105045140.png" alt="image-20230614105045140"></p><p>加密处理：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 加密</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> base64</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> Crypto.Cipher </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PKCS1_v1_5</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> Crypto.PublicKey </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RSA</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 这个RSA帮我们生成公钥和私钥</span></span>
<span class="line"><span style="color:#6A737D;"># 明文</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;这是一个测试&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># 明文转换成字节才能加密</span></span>
<span class="line"><span style="color:#E1E4E8;">ming_s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s.encode()</span></span>
<span class="line"><span style="color:#6A737D;"># 读取公钥</span></span>
<span class="line"><span style="color:#E1E4E8;">f </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;public.pem&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;rb&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">pub_key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RSA</span><span style="color:#E1E4E8;">.importKey(f.read())</span></span>
<span class="line"><span style="color:#6A737D;"># 加密器</span></span>
<span class="line"><span style="color:#E1E4E8;">rsa </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PKCS1_v1_5</span><span style="color:#E1E4E8;">.new(pub_key)</span></span>
<span class="line"><span style="color:#6A737D;"># 加密完成生成的是字节</span></span>
<span class="line"><span style="color:#E1E4E8;">mi_bs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> rsa.encrypt(ming_s)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(mi_bs)</span></span>
<span class="line"><span style="color:#6A737D;"># 使用base64将字节转换为字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">mi_s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> base64.b64encode(mi_bs).decode()</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(mi_s)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 加密</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> base64</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> Crypto.Cipher </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PKCS1_v1_5</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> Crypto.PublicKey </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RSA</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 这个RSA帮我们生成公钥和私钥</span></span>
<span class="line"><span style="color:#6A737D;"># 明文</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;这是一个测试&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># 明文转换成字节才能加密</span></span>
<span class="line"><span style="color:#24292E;">ming_s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s.encode()</span></span>
<span class="line"><span style="color:#6A737D;"># 读取公钥</span></span>
<span class="line"><span style="color:#24292E;">f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;public.pem&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;rb&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">pub_key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RSA</span><span style="color:#24292E;">.importKey(f.read())</span></span>
<span class="line"><span style="color:#6A737D;"># 加密器</span></span>
<span class="line"><span style="color:#24292E;">rsa </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PKCS1_v1_5</span><span style="color:#24292E;">.new(pub_key)</span></span>
<span class="line"><span style="color:#6A737D;"># 加密完成生成的是字节</span></span>
<span class="line"><span style="color:#24292E;">mi_bs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rsa.encrypt(ming_s)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mi_bs)</span></span>
<span class="line"><span style="color:#6A737D;"># 使用base64将字节转换为字符串</span></span>
<span class="line"><span style="color:#24292E;">mi_s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> base64.b64encode(mi_bs).decode()</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mi_s)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>解密处理：</p>`,104),t=[e];function o(c,r,i,y,E,d){return n(),a("div",null,t)}const F=s(p,[["render",o]]);export{u as __pageData,F as default};
