import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.25ff06b1.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、创建项目","slug":"一、创建项目","link":"#一、创建项目","children":[{"level":3,"title":"1. 使用官方脚手架初始化项目","slug":"_1-使用官方脚手架初始化项目","link":"#_1-使用官方脚手架初始化项目","children":[]},{"level":3,"title":"2. 删除不必要的文件及代码","slug":"_2-删除不必要的文件及代码","link":"#_2-删除不必要的文件及代码","children":[]}]},{"level":2,"title":"二、基本配置","slug":"二、基本配置","link":"#二、基本配置","children":[{"level":3,"title":"1. 配置项目的icon","slug":"_1-配置项目的icon","link":"#_1-配置项目的icon","children":[]},{"level":3,"title":"2. 配置项目的标题","slug":"_2-配置项目的标题","link":"#_2-配置项目的标题","children":[]},{"level":3,"title":"3. 配置项目别名","slug":"_3-配置项目别名","link":"#_3-配置项目别名","children":[]}]},{"level":2,"title":"三、代码规范配置","slug":"三、代码规范配置","link":"#三、代码规范配置","children":[{"level":3,"title":"1. 统一配置.editorconfig","slug":"_1-统一配置-editorconfig","link":"#_1-统一配置-editorconfig","children":[]},{"level":3,"title":"2. prettier","slug":"_2-prettier","link":"#_2-prettier","children":[]},{"level":3,"title":"3. eslint","slug":"_3-eslint","link":"#_3-eslint","children":[]},{"level":3,"title":"4. 使用eslint检测prettier","slug":"_4-使用eslint检测prettier","link":"#_4-使用eslint检测prettier","children":[]}]},{"level":2,"title":"四、项目目录规范化","slug":"四、项目目录规范化","link":"#四、项目目录规范化","children":[{"level":3,"title":"1. CSS配置","slug":"_1-css配置","link":"#_1-css配置","children":[{"level":4,"title":"引入normalize.css","slug":"引入normalize-css","link":"#引入normalize-css","children":[]},{"level":4,"title":"在assets中增加css使用文件，index.css负责统一导出","slug":"在assets中增加css使用文件-index-css负责统一导出","link":"#在assets中增加css使用文件-index-css负责统一导出","children":[]},{"level":4,"title":"引入styled-components","slug":"引入styled-components","link":"#引入styled-components","children":[]}]},{"level":3,"title":"2. 路由配置","slug":"_2-路由配置","link":"#_2-路由配置","children":[]},{"level":3,"title":"3. redux配置","slug":"_3-redux配置","link":"#_3-redux配置","children":[]},{"level":3,"title":"4. 集成axios","slug":"_4-集成axios","link":"#_4-集成axios","children":[]},{"level":3,"title":"5. 集成AntDesign 5","slug":"_5-集成antdesign-5","link":"#_5-集成antdesign-5","children":[]}]}],"relativePath":"article/frontend/react/我的模板/1.TS-template.md","filePath":"article/frontend/react/我的模板/1.TS-template.md","lastUpdated":1707839101000}'),p={name:"article/frontend/react/我的模板/1.TS-template.md"},o=l(`<blockquote><p>该文是学习coderwhy 老师的记录</p></blockquote><h2 id="一、创建项目" tabindex="-1">一、创建项目 <a class="header-anchor" href="#一、创建项目" aria-label="Permalink to &quot;一、创建项目&quot;">​</a></h2><h3 id="_1-使用官方脚手架初始化项目" tabindex="-1">1. 使用官方脚手架初始化项目 <a class="header-anchor" href="#_1-使用官方脚手架初始化项目" aria-label="Permalink to &quot;1. 使用官方脚手架初始化项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create-react-app</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">react-ts-template</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--template</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">typescript</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create-react-app</span><span style="color:#24292E;"> </span><span style="color:#032F62;">react-ts-template</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--template</span><span style="color:#24292E;"> </span><span style="color:#032F62;">typescript</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>创建的是一个基于react+ts的基础模板</p><h3 id="_2-删除不必要的文件及代码" tabindex="-1">2. 删除不必要的文件及代码 <a class="header-anchor" href="#_2-删除不必要的文件及代码" aria-label="Permalink to &quot;2. 删除不必要的文件及代码&quot;">​</a></h3><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_15_1670046948677-dd3e9405-d546-4fb2-869b-56a12b03db65.png" alt="img"><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_15_1670046988280-da44bd79-2016-4c3d-85a1-ff0d994f0c2e.png" alt="img"></p><p>代码主要涉及到index.html中的多余内容，index.js中的严格模式检查，以及一些被删除的引用文件，</p><p>可以看到src下有一个react-app-env.d.ts文件，是用来做类型声明的，默认声明了很多文件类型为模块，实现以模块方式引入图片等</p><h2 id="二、基本配置" tabindex="-1">二、基本配置 <a class="header-anchor" href="#二、基本配置" aria-label="Permalink to &quot;二、基本配置&quot;">​</a></h2><h3 id="_1-配置项目的icon" tabindex="-1">1. 配置项目的icon <a class="header-anchor" href="#_1-配置项目的icon" aria-label="Permalink to &quot;1. 配置项目的icon&quot;">​</a></h3><p>替换public目录下的favicon.ico文件</p><h3 id="_2-配置项目的标题" tabindex="-1">2. 配置项目的标题 <a class="header-anchor" href="#_2-配置项目的标题" aria-label="Permalink to &quot;2. 配置项目的标题&quot;">​</a></h3><p>修改index.html</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_16_1670045723154-0bbdfb6c-c2eb-4a00-bdad-ff1d35a2a864.png" alt="img"></p><h3 id="_3-配置项目别名" tabindex="-1">3. 配置项目别名 <a class="header-anchor" href="#_3-配置项目别名" aria-label="Permalink to &quot;3. 配置项目别名&quot;">​</a></h3><p>主要是实现类似@-&gt;src的配置</p><p>这里需要对webpack进行配置，有两种方式，一种是inject暴露webpack所有配置，另一种是使用craco进行配置，推荐第二种方式！</p><p>不过有一个小坑，如果我们的react-scripts版本高于5，craco默认版本是不支持的，所以同学们按实际情况选择：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># react-scripts version &lt; 5</span></span>
<span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@craco/craco</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># react-scripts version &gt;= 5</span></span>
<span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@craco/craco@alpha</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># react-scripts version &lt; 5</span></span>
<span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@craco/craco</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># react-scripts version &gt;= 5</span></span>
<span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@craco/craco@alpha</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>但也不是一定的，可能后期就支持了，自己查看官网</p><p>这里需要配置3个文件</p><p>一是在根目录新建craco.config.js进行配置，二是配置tsconfig.json</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_48_7_1670047374693-90e1c6d9-e394-4e8a-bf20-a89a2f42a673-20221216204807271.png" alt="img"></p><p>三是配置package.json文件，执行脚本需要改为craco，不然craco的配置不会生效的!</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_48_14_1670047710808-eec659dd-fa6e-438f-820b-a4ca56563dca-20221216204814291.png" alt="img"></p><h2 id="三、代码规范配置" tabindex="-1">三、代码规范配置 <a class="header-anchor" href="#三、代码规范配置" aria-label="Permalink to &quot;三、代码规范配置&quot;">​</a></h2><h3 id="_1-统一配置-editorconfig" tabindex="-1">1. 统一配置.editorconfig <a class="header-anchor" href="#_1-统一配置-editorconfig" aria-label="Permalink to &quot;1. 统一配置.editorconfig&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># http://editorconfig.org</span></span>
<span class="line"><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#B392F0;">charset</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">utf-8</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#设置文件宁符集为 utf-8</span></span>
<span class="line"><span style="color:#B392F0;">indent_style</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">space</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 缩进风修(tab space)</span></span>
<span class="line"><span style="color:#B392F0;">indent_size</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#缩进大小</span></span>
<span class="line"><span style="color:#B392F0;">end_of_line</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lf</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#控制换行类型(（Lf/cr /crlf)</span></span>
<span class="line"><span style="color:#B392F0;">trim_trailing_whitespace</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#去除行居的任意空白字符</span></span>
<span class="line"><span style="color:#B392F0;">insert_final_newline</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#始終在文件来尼麵人一个新行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">.md] </span><span style="color:#6A737D;">#表示仅md：文件适用以下规网</span></span>
<span class="line"><span style="color:#B392F0;">max_line_length</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">off</span></span>
<span class="line"><span style="color:#B392F0;">trim_trailing_whitespace</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># http://editorconfig.org</span></span>
<span class="line"><span style="color:#6F42C1;">root</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#6F42C1;">charset</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">utf-8</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#设置文件宁符集为 utf-8</span></span>
<span class="line"><span style="color:#6F42C1;">indent_style</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">space</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 缩进风修(tab space)</span></span>
<span class="line"><span style="color:#6F42C1;">indent_size</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#缩进大小</span></span>
<span class="line"><span style="color:#6F42C1;">end_of_line</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lf</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#控制换行类型(（Lf/cr /crlf)</span></span>
<span class="line"><span style="color:#6F42C1;">trim_trailing_whitespace</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#去除行居的任意空白字符</span></span>
<span class="line"><span style="color:#6F42C1;">insert_final_newline</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#始終在文件来尼麵人一个新行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">.md] </span><span style="color:#6A737D;">#表示仅md：文件适用以下规网</span></span>
<span class="line"><span style="color:#6F42C1;">max_line_length</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">off</span></span>
<span class="line"><span style="color:#6F42C1;">trim_trailing_whitespace</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_2-prettier" tabindex="-1">2. prettier <a class="header-anchor" href="#_2-prettier" aria-label="Permalink to &quot;2. prettier&quot;">​</a></h3><p>先安装，开发时依赖</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prettier</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>根目录新建.prettierrc文件并配置</li></ul><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;useTabs&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;tabWidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;printWidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;singleQuote&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;trailingComma&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;none&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;semi&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;useTabs&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;tabWidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;printWidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;singleQuote&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;trailingComma&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;none&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;semi&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>根目录新建.prettierignore文件并配置</li></ul><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">build</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">.local</span></span>
<span class="line"><span style="color:#6A737D;">.output.js</span></span>
<span class="line"><span style="color:#6A737D;">/node_modules/**</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">**/</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">.svg</span></span>
<span class="line"><span style="color:#F97583;">**</span><span style="color:#6A737D;">/*.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/public/*</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">/</span><span style="color:#24292E;">build</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">.local</span></span>
<span class="line"><span style="color:#6A737D;">.output.js</span></span>
<span class="line"><span style="color:#6A737D;">/node_modules/**</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">**/</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">.svg</span></span>
<span class="line"><span style="color:#D73A49;">**</span><span style="color:#6A737D;">/*.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/public/*</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>package.json文件中增加prettier脚本</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">:{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;prettier&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;prettier --write .&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;prettier&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;prettier --write .&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>现在需要格式化所有文件，可以执行npm run prettier</p><p>在webstorm中如果想要实现保存自动格式化，需要做如下配置</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_48_24_1670049366783-8dbf804b-5451-4b78-957e-170942e9f7af-20221216204824717.png" alt="img"></p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_18_1670049393516-849c1f24-35e3-40b3-a292-6633ad0de115.png" alt="img"></p><h3 id="_3-eslint" tabindex="-1">3. eslint <a class="header-anchor" href="#_3-eslint" aria-label="Permalink to &quot;3. eslint&quot;">​</a></h3><p>先安装</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行npx eslint按提示进行配置</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_48_33_1670049920834-9421dfd9-ea95-4962-9a31-de9fa962cec1-20221216204833457.png" alt="img"></p><p>如果项目可能在node环境跑，可以在.eslintrc.js中env下增加配置</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_19_1670050070708-c12bf56c-080a-44b3-a977-243250d63fc8.png" alt="img"></p><p>webstorm中的设置</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_19_1670050241498-a3dddaaa-9921-4bb7-aae5-d08627d773a6.png" alt="img"></p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_19_1670050381612-8bd81076-e92f-4433-a65f-048e5562938b.png" alt="img"></p><h3 id="_4-使用eslint检测prettier" tabindex="-1">4. 使用eslint检测prettier <a class="header-anchor" href="#_4-使用eslint检测prettier" aria-label="Permalink to &quot;4. 使用eslint检测prettier&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-plugin-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-config-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-plugin-prettier</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-config-prettier</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_48_48_1670050653223-27dafcf7-215e-43f3-9c96-92842745ee09-20221216204847996.png" alt="img"><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_22_1670050709970-799d1c0c-b21d-4757-996d-39527266eff5.png" alt="img"></p><p>如上图中，末尾的分号，prettierrc中配置的是false，即不要末尾分号，但是这里加了，eslint检测到，会给编辑器报错</p><h2 id="四、项目目录规范化" tabindex="-1">四、项目目录规范化 <a class="header-anchor" href="#四、项目目录规范化" aria-label="Permalink to &quot;四、项目目录规范化&quot;">​</a></h2><p>在src目录下进行模块化划分</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_23_1670053230127-d7710a0f-e8a2-4119-9fbf-fd2ca3261099.png" alt="img"></p><h3 id="_1-css配置" tabindex="-1">1. CSS配置 <a class="header-anchor" href="#_1-css配置" aria-label="Permalink to &quot;1. CSS配置&quot;">​</a></h3><h4 id="引入normalize-css" tabindex="-1">引入normalize.css <a class="header-anchor" href="#引入normalize-css" aria-label="Permalink to &quot;引入normalize.css&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">normalize.css</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">normalize.css</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="在assets中增加css使用文件-index-css负责统一导出" tabindex="-1">在assets中增加css使用文件，index.css负责统一导出 <a class="header-anchor" href="#在assets中增加css使用文件-index-css负责统一导出" aria-label="Permalink to &quot;在assets中增加css使用文件，index.css负责统一导出&quot;">​</a></h4><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_23_1670054230306-74712758-7caa-4165-9c0e-515a52d06ab6.png" alt="img"></p><p>我看了AntDesign官网，现在5.0版本已经弃用了less，全部cssinjs的方案，所以，这里我们就不用less了，因为这个模板我主要还是一AntDesign位组件库来使用</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_24_1670054304987-86c35832-eff0-4783-85a1-510454482900.png" alt="img"></p><h4 id="引入styled-components" tabindex="-1">引入styled-components <a class="header-anchor" href="#引入styled-components" aria-label="Permalink to &quot;引入styled-components&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">styled-components</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@types/styled-components</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">styled-components</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@types/styled-components</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>配置styled-components的ThemeProvider</p><p>首先需要提供一个主题文件，我们放到assets的theme目录中，然后src目录index.tsx中进行配置</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_25_1670056765446-f4ffe31e-bcc3-4985-be02-1bf6fbebb213.png" alt="img"></p><h3 id="_2-路由配置" tabindex="-1">2. 路由配置 <a class="header-anchor" href="#_2-路由配置" aria-label="Permalink to &quot;2. 路由配置&quot;">​</a></h3><p>这里我们就配一个一个一级路由一个二级路由吧，Login和Home是一级路由，Home下再有两个子路由</p><p>首先安装react-router-dom</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">react-router-dom</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">react-router-dom</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>第一步，在src下index.tsx中配置Roter包裹App，可以用HashRouter(路径中多一个#)也可以用BroswerRouter，开发方便观察，我们可以选用HashRouter</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_25_1670081466235-c917c044-3b13-4410-8f1c-3b6d3ebf8e49.png" alt="img"></p><p>第二步编写路由配置文件，并在App组件中使用</p><p>这里需要用到自定义组件了，我们以后定义组件都使用如下的形式：</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_26_1670064888621-1d57ddb3-6199-4598-8afd-38f0074d3ec2.png" alt="img"></p><p>注意这里使用路由懒加载，需要配合Suspense来使用</p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_28_1670081402901-d74933a4-f481-4972-a74c-bad5d3c4be4a.png" alt="img"></p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_29_1670121605282-312d75c0-9585-42d2-baf5-e3bb771fc070.gif" alt="img"></p><h3 id="_3-redux配置" tabindex="-1">3. redux配置 <a class="header-anchor" href="#_3-redux配置" aria-label="Permalink to &quot;3. redux配置&quot;">​</a></h3><p>先安装依赖</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@reduxjs/toolkit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">react-redux</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@reduxjs/toolkit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">react-redux</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>创建store，在store目录下，新建index.ts，创建一个reducer，并添加一个reducer</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">createSlice</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">homeSlice</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">createSlice</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;home&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">initialState:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">count:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#9ECBFF;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">message:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">actions:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">addCountAction(state,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">payload</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;">) </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">state.count</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">payload</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">reducers:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{}</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">addCountAction</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">homeSlice.actions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">homeSlice.reducer</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">createSlice</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">homeSlice</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">createSlice</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;home&#39;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">initialState:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">count:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">message:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">actions:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">addCountAction(state,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">payload</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;">) </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">state.count</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">payload</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">reducers:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{}</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">addCountAction</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">homeSlice.actions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">homeSlice.reducer</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>下面统一管理useSelector、useDispatch及appShallowEqual是重点，记住就行！</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">configureStore</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">homeReducer</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@/store/features/home&#39;</span></span>
<span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">useSelector,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">useDispatch,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">shallowEqual,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">TypedUseSelectorHook</span></span>
<span class="line"><span style="color:#E1E4E8;">} from &#39;react-redux&#39;</span></span>
<span class="line"><span style="color:#B392F0;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">store</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">configureStore</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">reducer:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">home:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">homeReducer</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">用来定义store中state的类型</span></span>
<span class="line"><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">IRootState</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ReturnType</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">store.getStat</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DispatchType</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">store.dispatch</span></span>
<span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">这里统一管理这三个东西，后面两个其实没有必要，但是有一个好处是在其它文件引入时只要从一个文件import</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">useAppSelector:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">TypedUseSelectorHook</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">IRootStat</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">useSelector</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">useAppDispatch:</span><span style="color:#E1E4E8;"> () =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DispatchType</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">useDispatch</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">appShallowEqual</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">shallowEqual</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">store</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">configureStore</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@reduxjs/toolkit&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">homeReducer</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/store/features/home&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">useSelector,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">useDispatch,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">shallowEqual,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">TypedUseSelectorHook</span></span>
<span class="line"><span style="color:#24292E;">} from &#39;react-redux&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">store</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">configureStore</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">reducer:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">home:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">homeReducer</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">用来定义store中state的类型</span></span>
<span class="line"><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#032F62;">IRootState</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ReturnType</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">typeof</span><span style="color:#24292E;"> </span><span style="color:#032F62;">store.getStat</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DispatchType</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">typeof</span><span style="color:#24292E;"> </span><span style="color:#032F62;">store.dispatch</span></span>
<span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">这里统一管理这三个东西，后面两个其实没有必要，但是有一个好处是在其它文件引入时只要从一个文件import</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useAppSelector:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TypedUseSelectorHook</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">IRootStat</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useSelector</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useAppDispatch:</span><span style="color:#24292E;"> () =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DispatchType</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useDispatch</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">appShallowEqual</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">shallowEqual</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">store</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>给根组件提供store，这里用的其实就是react-redux的功能</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">root</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ReactDOM.createRoot</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">document.getElementById(</span><span style="color:#B392F0;">&#39;root&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#9ECBFF;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">HTMLElement</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">root.render(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">ThemeProvider</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">theme={theme</span><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">Provider</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">store={store</span><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">HashRouter&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">App</span><span style="color:#E1E4E8;"> /</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">/HashRouter&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">/Provider&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">/ThemeProvider&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">root</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ReactDOM.createRoot</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">document.getElementById(</span><span style="color:#6F42C1;">&#39;root&#39;</span><span style="color:#24292E;">) </span><span style="color:#032F62;">as</span><span style="color:#24292E;"> </span><span style="color:#032F62;">HTMLElement</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">root.render(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">ThemeProvider</span><span style="color:#24292E;"> </span><span style="color:#032F62;">theme={theme</span><span style="color:#24292E;">}</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">Provider</span><span style="color:#24292E;"> </span><span style="color:#032F62;">store={store</span><span style="color:#24292E;">}</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">HashRouter&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">App</span><span style="color:#24292E;"> /</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/HashRouter&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/Provider&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/ThemeProvider&gt;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>在组件中使用</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">React,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react&#39;</span></span>
<span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">LoginWrapper</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@/views/login/style&#39;</span></span>
<span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ReactNode</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react&#39;</span></span>
<span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">useAppSelector,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">useAppDispatch,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">appShallowEqual</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@/store&#39;</span></span>
<span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">addCountAction</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@/store/features/home&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">IProps</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">children?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ReactNode</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Login:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">React.FC</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">IProp</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> () =&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dispatch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">useAppDispatch</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">useAppSelector</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#B392F0;">state</span><span style="color:#E1E4E8;">) =&gt; ({</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">count:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">state.home.count,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">message:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">state.home.message</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span><span style="color:#9ECBFF;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">appShallowEqual</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">LoginWrapper&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">div&gt;homeStore&lt;/div&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">div&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">span&gt;count:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{count}</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">/spa</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">onClick={</span><span style="color:#E1E4E8;">() =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dispatch</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">addCountAction(1</span><span style="color:#E1E4E8;">))}</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">+</span><span style="color:#F97583;">1&lt;</span><span style="color:#E1E4E8;">/button</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">/div&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">div&gt;message:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{message}</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">/di</span><span style="color:#E1E4E8;">v</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">/LoginWrapper&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memo</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Login</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">React,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">LoginWrapper</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/views/login/style&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">type</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ReactNode</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useAppSelector,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useAppDispatch,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">appShallowEqual</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/store&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">addCountAction</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/store/features/home&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">interface</span><span style="color:#24292E;"> </span><span style="color:#032F62;">IProps</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">children?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ReactNode</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Login:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">React.FC</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">IProp</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> () =&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dispatch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useAppDispatch</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">const</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">message</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useAppSelector</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#6F42C1;">state</span><span style="color:#24292E;">) =&gt; ({</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">count:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">state.home.count,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">message:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">state.home.message</span></span>
<span class="line"><span style="color:#24292E;">    })</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">appShallowEqual</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">LoginWrapper&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">div&gt;homeStore&lt;/div&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">div&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">span&gt;count:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{count}</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">/spa</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">button</span><span style="color:#24292E;"> </span><span style="color:#032F62;">onClick={</span><span style="color:#24292E;">() =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dispatch</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">addCountAction(1</span><span style="color:#24292E;">))}</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">+</span><span style="color:#D73A49;">1&lt;</span><span style="color:#24292E;">/button</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/div&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">div&gt;message:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{message}</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">/di</span><span style="color:#24292E;">v</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/LoginWrapper&gt;</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memo</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Login</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_4-集成axios" tabindex="-1">4. 集成axios <a class="header-anchor" href="#_4-集成axios" aria-label="Permalink to &quot;4. 集成axios&quot;">​</a></h3><p>Axios的集成可以参考之前的一篇文章：</p><p><a href="https://juejin.cn/post/7023006049732919309" target="_blank" rel="noreferrer">https://juejin.cn/post/7023006049732919309</a></p><p><strong>这里有一些改变</strong></p><ul><li>一是为了实现项目在打包编译后仍然能够动态修改api的请求BaseUrl，将部分信息放在了public目录下的config.js文件中，该文件直接在index.html中引入，将信息注册到window对象下，打包编译后，public目录作为静态资源目录，打包后将维持原样</li></ul><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_49_12_1670116914023-3abab280-9d50-4662-8b62-0ded0c9562c5-20221216204912822.png" alt="img"></p><ul><li>二是去除了之前使用elementplus加载组件的loading效果，这个根据个人需求进行添加</li><li>对请求响应全局拦截进行了改造，将服务器返回的数据统一返回，接收时可直接解析</li></ul><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_29_1670120355001-fe098f6c-aa94-4b00-8c87-7ba28f382419.png" alt="img"></p><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2022/12/16_20_47_30_1670120406954-68a981b6-e93f-4235-9b8d-8151c8a2b123.png" alt=""></p><h3 id="_5-集成antdesign-5" tabindex="-1">5. 集成AntDesign 5 <a class="header-anchor" href="#_5-集成antdesign-5" aria-label="Permalink to &quot;5. 集成AntDesign 5&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">➜</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">antd</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">➜</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">antd</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在src根目录index.tsx中引入antd的reset样式</p><div class="language-tsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;antd/dist/reset.css&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;antd/dist/reset.css&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用的时候引入组件，使用就可以</p><div class="language-tsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Button } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;antd&#39;</span></span>
<span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;primary&quot;</span><span style="color:#E1E4E8;">&gt;button&lt;/</span><span style="color:#79B8FF;">Button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Button } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;antd&#39;</span></span>
<span class="line"><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">Button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;primary&quot;</span><span style="color:#24292E;">&gt;button&lt;/</span><span style="color:#005CC5;">Button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>关于自定义主题等高级特性可以参考官网使用</p>`,110),e=[o];function t(c,r,i,y,E,F){return n(),a("div",null,e)}const b=s(p,[["render",t]]);export{u as __pageData,b as default};
